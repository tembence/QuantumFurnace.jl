(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    434657,       9021]
NotebookOptionsPosition[    419070,       8747]
NotebookOutlinePosition[    419492,       8764]
CellTagsIndexPosition[    419449,       8761]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Finding ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox["\[Alpha]", 
        RowBox[{
          SubscriptBox["\[Nu]", "1"], ",", 
          SubscriptBox["\[Nu]", "2"]}]], TraditionalForm], "errors" -> {}, 
     "input" -> "\\alpha_{\\nu_1,\\nu_2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6958c664-ee07-41ee-b864-99e53293c185"]
}], "Subsection",
 CellChangeTimes->{{3.947327742914858*^9, 
  3.947327771701763*^9}},ExpressionUUID->"ffd269ff-320b-4475-8127-\
b91f0172939c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{
     RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "  ", "&&", 
     RowBox[{
      SubscriptBox["\[Sigma]", "\[Gamma]"], ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"x", " ", ">", " ", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{
        RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], " ", "&&", 
     "  ", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "x", ",", " ", "\[Beta]", ",", "\[Omega]", ",", " ", "\[Sigma]", ",", 
         
         SubscriptBox["\[Sigma]", "\[Gamma]"], ",", " ", 
         SubscriptBox["\[Nu]", "1"], ",", " ", 
         SubscriptBox["\[Nu]", "2"]}], "}"}], ",", "Reals"}], "]"}], " ", "&&",
      " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"x", "/", "\[Beta]"}]}], " ", "-", " ", 
       RowBox[{"\[Sigma]", "^", "2"}]}], " ", ">=", " ", "0"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "x"}], ")"}], "^", "2"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{
        SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}]}], ")"}]}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "-", " ", 
          SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.94732779370807*^9, 3.947327798855187*^9}, {
  3.94732783630007*^9, 3.947327872232691*^9}, {3.9473279096391068`*^9, 
  3.9473279104234257`*^9}, {3.947328023407134*^9, 3.947328052274888*^9}, {
  3.947328204157297*^9, 3.9473282396027403`*^9}, {3.947328317444005*^9, 
  3.947328320113193*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9751bb07-ae3a-43b9-a241-8b6d7ffb84d2"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", 
         SubscriptBox["\[Nu]", "1"]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "\[Omega]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.9473279430970793`*^9, 3.947328054091301*^9, 
  3.9473282536833878`*^9, 3.947328332411297*^9, 3.9473285209159946`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"5df55154-12d7-42e3-8b72-2752837f7885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "->", " ", "$Assumptions"}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"f7fccb9e-1334-4c91-860e-f4410103bdd0"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SubsuperscriptBox["\[Nu]", "1", "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SubsuperscriptBox["\[Nu]", "2", "2"]}], 
       SuperscriptBox["\[Sigma]", "2"]], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           SubscriptBox["\[Nu]", "1"], 
           SuperscriptBox["\[Sigma]", "2"]], "+", 
          FractionBox[
           SubscriptBox["\[Nu]", "2"], 
           SuperscriptBox["\[Sigma]", "2"]], "-", 
          FractionBox[
           RowBox[{"2", " ", "x"}], 
           SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]]}], ")"}], "2"], 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["\[Sigma]", "2"]], "+", 
        FractionBox["1", 
         SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox["x", "2"]}], 
       SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]]}], ")"}]}]], 
  RowBox[{"\[Sigma]", " ", 
   SqrtBox[
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["\[Sigma]", "2"]], "+", 
     FractionBox["1", 
      SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]]}]]}]]], "Output",
 CellChangeTimes->{3.947327968695114*^9, 3.947328064530119*^9, 
  3.947328350242304*^9, 3.947328531322897*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"cbe5e026-17a1-4f32-b3ff-3e7a7131ac33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Myexpr", " ", "=", 
  RowBox[{"Exp", "[", " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}], " ", 
      RowBox[{"\[Sigma]", "^", "2"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           SubscriptBox["\[Nu]", "1"], "+", 
           SubscriptBox["\[Nu]", "2"]}], 
          RowBox[{"\[Sigma]", "^", "2"}]], "-", " ", 
         FractionBox[
          RowBox[{"2", "x"}], 
          RowBox[{
           SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}]]}], ")"}], "^", 
       "2"}]}], 
     RowBox[{"8", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}]}], ")"}]}]], " ", 
    "-", " ", 
    FractionBox[
     RowBox[{"x", "^", "2"}], 
     RowBox[{"2", 
      RowBox[{
       SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}]}]], " ", "-", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "+", " ", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}], 
     RowBox[{"8", 
      RowBox[{"\[Sigma]", "^", "2"}]}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TheirExpr", " ", "=", " ", 
  RowBox[{"Exp", "[", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "+", " ", 
        SubscriptBox["\[Nu]", "2"], " ", "+", " ", 
        RowBox[{"2", "x"}]}], ")"}], "^", "2"}], 
     RowBox[{"8", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["\[Sigma]", "\[Gamma]"], "^", "2"}]}], ")"}]}]]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.947330152878887*^9, 3.947330340691038*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"bedaddf1-3208-44d0-8d3e-7a07ebbc6c8f"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "+", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
   FractionBox[
    SuperscriptBox["x", "2"], 
    RowBox[{"2", " ", 
     SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["\[Nu]", "1"], "+", 
          SubscriptBox["\[Nu]", "2"]}], 
         SuperscriptBox["\[Sigma]", "2"]], "-", 
        FractionBox[
         RowBox[{"2", " ", "x"}], 
         SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]]}], ")"}], "2"], " ", 
     
     SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]}], 
      ")"}]}]]}]]], "Output",
 CellChangeTimes->{3.947330354994018*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fe7ef331-8125-4986-b657-d76e18a659ab"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "x"}], "+", 
       SubscriptBox["\[Nu]", "1"], "+", 
       SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       SubsuperscriptBox["\[Sigma]", "\[Gamma]", "2"]}], 
      ")"}]}]]}]]], "Output",
 CellChangeTimes->{3.947330354996016*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bca3ee35-72d6-49b1-b781-48da5555504d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Myexpr", " ", "==", " ", "TheirExpr"}], ",", " ", 
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.9473303758678503`*^9, 3.947330380819309*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"7b5abb8b-0fc6-4f3e-9f4f-ed8c86735afd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.9473303822866898`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b4349038-5250-4574-b6f3-2a825ce23ee8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Finding ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubsuperscriptBox["\[Alpha]", 
        RowBox[{
          SubscriptBox["\[Nu]", "1"], ",", 
          SubscriptBox["\[Nu]", "2"]}], 
        StyleBox["M", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\alpha^M_{\\nu_1,\\nu_2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b90e2e84-3545-499e-8af5-c9d516d49f8d"],
 "by integrating ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox["\[Alpha]", 
          RowBox[{
            SubscriptBox["\[Nu]", "1"], ",", 
            SubscriptBox["\[Nu]", "2"]}]], "(", 
         StyleBox["x", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\alpha_{\\nu_1,\\nu_2}(x)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6a36435f-99d0-4ebc-a772-2bfaf4a1b138"]
}], "Subsection",
 CellChangeTimes->{{3.945769708982831*^9, 3.945769731166501*^9}, 
   3.945769791436537*^9, {3.945771193168119*^9, 3.945771194419031*^9}, {
   3.947331845838381*^9, 3.947331868910391*^9}, {3.947331944034072*^9, 
   3.947331945086031*^9}},ExpressionUUID->"30cf68cb-d430-49da-b2f1-\
bde69ea4e98e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"s", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "\[Beta]", ",", "s", ",", " ", "\[Omega]", ",", " ", "\[Nu]",
         ",", " ", "\[Sigma]"}], "}"}], ",", "Reals"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"\[Beta]", " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", "  ", "Pi", " ", "x"}], ")"}]}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{"\[Nu]", " ", "+", " ", 
         RowBox[{"2", "x"}]}], ")"}], "^", "2"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"16", "x"}], ")"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.945768347885551*^9, 3.9457684657318707`*^9}, {
  3.945768503152728*^9, 3.9457685034703827`*^9}, {3.945768702483395*^9, 
  3.9457687118836*^9}, {3.945768766682871*^9, 3.945768766932987*^9}, {
  3.945768850632403*^9, 3.945768859818183*^9}, {3.9457690944832478`*^9, 
  3.9457691044047813`*^9}, {3.945769494438339*^9, 3.9457694984222803`*^9}, {
  3.945769968336549*^9, 3.945769970299967*^9}, {3.9457702859459457`*^9, 
  3.945770353527322*^9}, {3.947121737443809*^9, 3.947121753016541*^9}, {
  3.947567700926817*^9, 3.947567708755868*^9}, {3.947567750857243*^9, 
  3.9475677511332073`*^9}, {3.947567880718223*^9, 3.94756788705716*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9768911a-9069-4e7c-97e9-3faf9f16435d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{
        RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{
         RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"s", "^", "2"}], "/", "\[Beta]"}]}]}], "}"}], ",", " ", 
    RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}], " ", "//",
   " ", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.945768535684993*^9, 3.9457685501579027`*^9}, {
   3.94576868340353*^9, 3.945768684923521*^9}, {3.9457689945509033`*^9, 
   3.9457689952205877`*^9}, {3.945769106768857*^9, 3.945769113985961*^9}, 
   3.945769398873322*^9, {3.94576944872606*^9, 3.945769449490991*^9}, {
   3.947567844667371*^9, 3.9475678549441347`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a4bee400-c66b-41ea-9693-8d04ca375f89"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Erf", "[", 
      FractionBox[
       RowBox[{"\[Nu]", "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
    RowBox[{"Erf", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["s", "2"]}], "+", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{"\[Nu]", "+", 
          RowBox[{"\[Beta]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["s", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}]]}]], "]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Nu]"}], "+", 
             RowBox[{"\[Beta]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox["s", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Beta]", "2"], " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}]]}]], "]"}], "+", 
       RowBox[{"Erfc", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "\[Nu]"}], "+", 
          RowBox[{"\[Beta]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.947567767756917*^9, {3.9475678795364027`*^9, 3.9475679038138323`*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"408afeb5-193c-425c-9c56-3a20391be7d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{"%", ",", " ", 
    RowBox[{"s", "->", " ", "Infinity"}]}], "]"}], " ", "//", " ", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.945769199114607*^9, 3.9457692361234703`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"bbebda8f-5520-4d0f-a55e-e6f040ba3e1a"],

Cell[BoxData[
 TemplateBox[{
  "Limit", "alimv", 
   "\"Warning: Assumptions that involve the limit variable are ignored.\"", 2,
    13, 4, 29560117363407235806, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.947567774153298*^9, 3.947567909396925*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"6e33a0c5-1998-457a-9092-2af4f94e2677"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Nu]"}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
    RowBox[{"Erfc", "[", 
     FractionBox[
      RowBox[{"\[Nu]", "+", 
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.947567774547678*^9, 3.947567909811603*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8f3b9228-5a1a-45c0-a86b-cb550c5409e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Finding ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox["\[Gamma]", 
        StyleBox["M", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
     "\\gamma^M", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "69064360-2f73-430b-aec1-3034f1e282a2"],
 "by integrating ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Gamma]", "(", 
         StyleBox["x", "TI"], ")"}], TraditionalForm], "errors" -> {}, 
     "input" -> "\\gamma(x)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05b3c7da-3dab-4219-95c7-0418d815e397"]
}], "Subsection",
 CellChangeTimes->{{3.947056191455303*^9, 3.9470562085066357`*^9}, {
  3.947331910545083*^9, 
  3.9473319310237293`*^9}},ExpressionUUID->"d81eac87-a758-42e7-90d0-\
ef20c4059b86"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[CurlyEpsilon]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "\[Beta]", ",", "s", ",", " ", "\[Omega]", ",", " ", "\[Nu]",
         ",", " ", "\[Sigma]", ",", " ", "c", ",", "\[CurlyEpsilon]"}], "}"}],
       ",", "Reals"}], "]"}], "&&", " ", 
    RowBox[{"s", ">", "c", ">", "0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "x"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"x", "/", "\[Beta]"}]}], "-", 
        RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], ")"}]}], "]"}], " ", "/", 
  " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"2", "Pi", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "/", "\[Beta]"}]}], "-", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.94712193140314*^9, 3.947121939981743*^9}, {
   3.947122332204859*^9, 3.947122334787973*^9}, {3.947122462573749*^9, 
   3.947122512879738*^9}, {3.9471226176767597`*^9, 3.9471226181735153`*^9}, {
   3.9471226707922277`*^9, 3.947122672061171*^9}, {3.947122771828807*^9, 
   3.947122773162839*^9}, {3.9471229581412163`*^9, 3.947122976143861*^9}, {
   3.94712306008609*^9, 3.9471230748118763`*^9}, {3.9471231654115973`*^9, 
   3.947123166227292*^9}, 3.9472309106429377`*^9, {3.947231149955275*^9, 
   3.9472311531924353`*^9}, {3.9472320380708714`*^9, 3.947232049215014*^9}, {
   3.947232445883337*^9, 3.947232445989687*^9}, {3.9531058906058073`*^9, 
   3.953105916432122*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ccb07e9b-e243-40e7-a2b6-0e210b1d8de2"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "\[Omega]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "x"}], "\[Beta]"], "-", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "x"}], "\[Beta]"], "-", 
     SuperscriptBox["\[Sigma]", "2"]}]]}]]], "Output",
 CellChangeTimes->{{3.9472325284830713`*^9, 3.947232557757143*^9}, 
   3.9472328416817207`*^9, 3.9531059180670433`*^9, 3.9531060129105453`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"e1f7248c-85f4-4bad-962f-9f694e829b5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"\[Beta]", " ", 
       RowBox[{
        RowBox[{"\[Sigma]", "^", "2"}], "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{
         RowBox[{"\[Sigma]", "^", "2"}], "/", "2"}]}], "+", 
       RowBox[{
        RowBox[{"s", "^", "2"}], "/", "\[Beta]"}]}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[RightArrow]", "$Assumptions"}]}], "]"}], " ", "//",
   " ", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.947122624154354*^9, 3.9471226740425797`*^9}, {
  3.947123103214279*^9, 3.947123106576614*^9}, {3.947123140392315*^9, 
  3.947123141513709*^9}, {3.94723089831285*^9, 3.9472309013950357`*^9}, {
  3.947231240250759*^9, 3.947231241666363*^9}, {3.9472322778529778`*^9, 
  3.947232278878563*^9}, {3.947232324933754*^9, 3.947232325130599*^9}, {
  3.947232549123144*^9, 3.947232549723741*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"180f06f4-363d-481e-875d-06a36cb3b62f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], " ", "\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Beta]", " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{"2", " ", "\[Omega]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{"2", " ", "\[Omega]"}]}], "]"}]}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"Erf", "[", 
     RowBox[{
      FractionBox["s", "2"], "-", 
      FractionBox[
       RowBox[{"\[Beta]", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"\[Beta]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Omega]"}]}], "]"}]}], 
       RowBox[{"4", " ", "s"}]]}], "]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Beta]", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Omega]"}]}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Erf", "[", 
        RowBox[{
         FractionBox["s", "2"], "+", 
         FractionBox[
          RowBox[{"\[Beta]", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"\[Beta]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"2", " ", "\[Omega]"}]}], "]"}]}], 
          RowBox[{"4", " ", "s"}]]}], "]"}]}], ")"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.947232545294262*^9, 3.947232563734304*^9}, 
   3.947232845520729*^9, 3.953106018711309*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"c97e4853-af10-4f7f-85d1-9e298fa1e889"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Result", " ", "=", " ", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"s", "->", " ", "Infinity"}]}], "]"}], " ", "//", " ", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.947232809241675*^9, 3.9472328108929243`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"5306ca9e-260a-43c0-90ac-1631015d073b"],

Cell[BoxData[
 TemplateBox[{
  "Limit", "alimv", 
   "\"Warning: Assumptions that involve the limit variable are ignored.\"", 2,
    93, 3, 29596308541738175901, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.947232571910256*^9, 3.947232851013279*^9, 
  3.9531060195967903`*^9},
 CellLabel->
  "During evaluation of \
In[93]:=",ExpressionUUID->"bd7b4c99-c2ed-469e-a5f4-ecec9058fe22"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], " ", "\[Beta]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Beta]", " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "+", 
      RowBox[{"2", " ", "\[Omega]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{"2", " ", "\[Omega]"}]}], "]"}]}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}]], "Output",
 CellChangeTimes->{3.947232572004567*^9, 3.9472328510575438`*^9, 
  3.953106019727498*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"30539870-c2c8-4776-a116-49fa61f933c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PaperResult", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "+", " ", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{
            RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
        "+", 
        RowBox[{"Abs", "[", 
         RowBox[{"(", 
          RowBox[{"\[Omega]", " ", "+", " ", 
           RowBox[{"\[Beta]", " ", 
            RowBox[{
             RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
         "]"}]}], ")"}], "/", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Result", " ", "==", " ", "PaperResult"}], ",", " ", 
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.947232798129909*^9, {3.9472328559955063`*^9, 3.94723289372244*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"bfb3a9af-fc0e-4de0-b90c-cc581c2bfe3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}], "\[Equal]", 
  "1"}]], "Output",
 CellChangeTimes->{{3.9472328674631987`*^9, 3.94723289653332*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"01123bf7-ab69-48de-ae5e-adc4a2560716"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "x"}], ")"}], "^", "2"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"x", "/", "\[Beta]"}]}], "-", 
        RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], ")"}]}], "]"}], " ", "/", 
  " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"2", "Pi", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"x", "/", "\[Beta]"}]}], "-", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"dc5b7f95-3e73-4841-a220-f4bee5178848"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "\[Omega]"}], ")"}], "2"], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "x"}], "\[Beta]"], "-", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", 
   SqrtBox[
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "x"}], "\[Beta]"], "-", 
     SuperscriptBox["\[Sigma]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.953105878807876*^9, 3.9531059243828382`*^9, 
  3.953106068857978*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"8e0aa659-47b7-4fc6-93f5-bd3908e4256e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{
         RowBox[{"\[Sigma]", "^", "2"}], "/", "2"}]}], " ", "+", " ", 
       "\[CurlyEpsilon]"}], ",", 
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        RowBox[{
         RowBox[{"\[Sigma]", "^", "2"}], "/", "2"}]}], "+", 
       RowBox[{
        RowBox[{"s", "^", "2"}], "/", "\[Beta]"}]}]}], "}"}], ",", 
    RowBox[{"Assumptions", "\[RightArrow]", "$Assumptions"}]}], "]"}], " ", "//",
   " ", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.953105927062089*^9, 3.953105930263228*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"e1f6a91c-8069-4fd3-bfc9-13d8938d95ad"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
       RowBox[{
         RowBox[{"-", 
           RowBox[{"Erf", "[", 
             RowBox[{
               FractionBox["1", "4"], " ", 
               SqrtBox[
                FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"2", " ", "\[CurlyEpsilon]"}], "+", 
                   RowBox[{"\[Beta]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "+", 
                   RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], "+", 
         RowBox[{"Erf", "[", 
           FractionBox[
            RowBox[{
              RowBox[{"2", " ", 
                SuperscriptBox["s", "2"]}], "+", 
              RowBox[{
                SuperscriptBox["\[Beta]", "2"], " ", 
                SuperscriptBox["\[Sigma]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Beta]", " ", "\[Omega]"}]}], 
            RowBox[{"4", " ", "s"}]], "]"}], "+", 
         RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
              RowBox[{"-", 
                FractionBox["1", "2"]}], " ", "\[Beta]", " ", 
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"\[Beta]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "+", 
                  RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
           RowBox[{"(", 
             RowBox[{
               RowBox[{"Erf", "[", 
                 RowBox[{
                   FractionBox["1", "4"], " ", 
                   SqrtBox[
                    FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[CurlyEpsilon]"}], "+", 
                    RowBox[{"\[Beta]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}], "+", 
               RowBox[{"Erf", "[", 
                 RowBox[{
                   FractionBox["s", "2"], "-", 
                   FractionBox[
                    RowBox[{"\[Beta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Beta]", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], "+", 
                    RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], 
                    RowBox[{"4", " ", "s"}]]}], "]"}]}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{"(", 
       RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}], 
   RowBox[{
     SuperscriptBox["s", "2"], "\[NotEqual]", 
     RowBox[{"\[Beta]", " ", "\[CurlyEpsilon]"}]}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.953105956146048*^9, 3.9531060908723*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"0604a8fc-bf37-4a05-9363-e819ceff9d68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MetroEps", " ", "=", " ", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"s", "->", " ", "Infinity"}]}], "]"}], " ", "//", " ", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.953106062526702*^9, 3.953106065030055*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"98c4a2d2-bee4-481e-b893-979ecfa7b076"],

Cell[BoxData[
 TemplateBox[{
  "Limit", "alimv", 
   "\"Warning: Assumptions that involve the limit variable are ignored.\"", 2,
    96, 4, 29596308541738175901, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.953105972495145*^9, 3.953106093498706*^9},
 CellLabel->
  "During evaluation of \
In[96]:=",ExpressionUUID->"039a31ff-b2ef-464a-b82f-82a7352e8db1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SqrtBox[
          FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[CurlyEpsilon]"}], "+", 
           RowBox[{"\[Beta]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Erfc", "[", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SqrtBox[
       FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[CurlyEpsilon]"}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}]], "Input",
 CellChangeTimes->{3.9531062737551317`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"74bb7991-afda-4b86-85c4-c02dc6543f32"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         SqrtBox[
          FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[CurlyEpsilon]"}], "+", 
           RowBox[{"\[Beta]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Erfc", "[", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      SqrtBox[
       FractionBox["\[Beta]", "\[CurlyEpsilon]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[CurlyEpsilon]"}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}]], "Output",
 CellChangeTimes->{3.953106273799759*^9, 3.95310631810078*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"9014875b-647d-4a6d-bd1a-9370ab022887"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Beta]", "->", "10"}], ",", " ", 
    RowBox[{"\[Sigma]", " ", "->", " ", 
     RowBox[{"1", "/", "10"}]}], ",", " ", 
    RowBox[{"\[CurlyEpsilon]", "->", " ", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.953106095958239*^9, 3.9531061403556957`*^9}, 
   3.953106267171021*^9, 3.953106319725317*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"8b115bde-edd3-4c6a-86d5-5610650b4141"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "5"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "10"], "+", 
         RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"2.5`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "0.1`"}], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
    RowBox[{"Erfc", "[", 
     RowBox[{"2.5`", " ", 
      RowBox[{"(", 
       RowBox[{"0.30000000000000004`", "\[VeryThinSpace]", "+", 
        RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"Assumptions", "\[RightArrow]", "True"}], ")"}]}]], "Output",
 CellChangeTimes->{3.9531061441334887`*^9, 3.953106275944552*^9, 
  3.95310632006104*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"f1e911f6-0c56-4a24-93aa-bac20a8f2d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Erf", "[", 
          RowBox[{"25.`", " ", 
           RowBox[{"(", 
            RowBox[{"0.098`", "\[VeryThinSpace]", "+", 
             RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"Erfc", "[", 
       RowBox[{"25.`", " ", 
        RowBox[{"(", 
         RowBox[{"0.10200000000000001`", "\[VeryThinSpace]", "+", 
          RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "1.0"}], ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9531061509502*^9, 3.953106186135655*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"1987f44c-d9ab-44ea-b8a2-e14602415a1b"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2Xc0V3/8B3BlJDK+MlKoFEqIjBCepURWQhRllDSMUJRUhBQVMiIZWZW9
s92ykpHI3tvH+nyUhmT8Pn7nd/ze/9zzOOee+8frPF/Pc++5Oy9c17+0noaG
5uM6GprVqwS4J1dWKATN/55Z6D9qSJE2/3/favS2u1xGXnNLC/PkR8uZNfN/
uM55kG96zXk2lfRsvZNrtngqNdvpObHm+SC3xwRIa45n7eMNHxxbc6SmlNM3
39E1e9pa3t57YmTNbrTJt5xmhtZs6dG4u+3d4JpDS0fDI68NrLmof8+mVMG+
Ne9iP6xqGN295mzRx9eGhjvW3F+VtUNOrm3No2KhB4j339b83/0kOYl1TWsW
k6OIJc7Vr9nr2MzXwtuf1qxd35C5saZyzVyG6YFnecqJqPIV6qFg7J6bBF/b
ByLKbfp/bX/yeXjpXoLQdOZYXPXQS7rD9p1lxM3mqr+rNhq5NS7gW0Y4mh/4
vepAX6lDfyzKCPcHxXOrrpWY8m+ULyM+/0qdXTVdS8LQW/YyooxhZHrVcDWT
8yCVEtFucqRV3xHY4nfmQynBxuE4tOrciqZeyfBSQjr9dPeqyVeeSG10KCUS
ZF42r3oPq9rDQfVSomNl4NOqL+QsdxRuLyWODBBFq448UyAW9KeEYAjJTl51
25Kjx7XGEiL69bawVbPH72tRfVtCWDmruK9aU2NUZJt7CUFXrHBh1d4z0W5z
RiXEYAYNVl0WdKaxTqKEcLEz4Fz1/EGOXQkMJYQmOW9gmeoDvXUud/uKCb63
l+JWbev5sNbwfTGR5aFjvOo3IhAQ9y8mev/+WVyierB+3pHeuphQlnYPXDWf
U3ZVr3Ix8TTmDuuqjXhsed9zFRM3N006La7Ot0TIzn+miJDN5C/8tzpfy/4P
1lVFBPNgRPfC6nw3vOREVBFRxbH07S/VKqn6V3ici4iNGc0R81TfPrWphKJd
RFAMnEX+UJ39u4qtZncRobfYc/0X1f7JceUqfwsJ9ZxY+TmqbczcnfMaCgmb
Cb2gWao1OM7tEYsrJGgZu6/MUL27Wr47zqWQeFJESpigmuYOlz+vViHhdeLC
vlGqe8V/HA7cXkiQQkk9/VQXDX6ZY/hZQLDdUwntpPpFaMqbezUFRKp1rGgz
1U4nHp/9GVlAlBaz2X2m+uSS1SYbxwLiM8NdIYJqsawjxKBaAaHsPcWZQzXj
JQGnM1sLiIxf9+cSqB7Z8m93IzmfoI+yuh5C9cf69na1inyC0Sx73wOqoz1y
/UrC8okuIRHi2mreZJ4rS9vmE1aDzdl6q/Mm2c0mHc4n9O8neBygWjpSM34H
Vz5hnN77nG01L3oiRmET7wnna7bK48sUTNPSbWQte0+4eYtWF1Bdkz9Q7B30
nkih0J71ojrRptT+n/V7ouQLHfNxqj23R+x0OvSe6K3Ua19ZosDsm0sLie09
4edBH5VBteIjg0fmI3mE0l8mfkOqeQ5JKrYV5BHnL7b8mVqk4Cd504z2szyC
6TpXijPVX+MmYios84j+xesBlH8UpBpV6yvK5RETLNvbjKn2ZYqnz2LKI8JP
JvikLlBgXeZeINKfSyyo3L879ZcCVadzNtE5uYS784wVB9UCwgoCXI9zCRbV
ryUC8xT86+RqenIul2CVj/zC8oeCjmc/vNZL5RJbO+5l9vyi7ueRRjlX+lyi
sf+N6uOf1Hz+SpmgdOYQDrtbxFnmKLBLehxpnZ5DsG/jHLr8nbpf5y+d7PXM
IZJPt4eGUCgQ/k91vaFxDhF41FAtYIaC9VUCebX7cgj+a+rZBlMU9N/+d/kI
TQ4xxsJr1UuioESsY2tBSzbhMeTwTmSMgvCB3AaJpGziewNCxIcpuBny3CPx
Xjahsk2dfrKfglMa9tJ8+tnE86hdCcY9FEgsao4FCWcTb1SHxhw6KGDKFHm5
8V8WMXFFkFOyhdp/F+m0PRqziOilmuMBjRRU8Awu/47PInb9VHN6XEvB67rS
LLvbWcRhTtvLXFUU3HWPsBrRziJ+23d27icoOCN9i8d0ZxZBpp251FRAgey4
QW3Tr0xik/axsLksan/pskgS0ZkE051OckwcdX/XTw7J3sgkeO5U8/JHUPD2
fXVoqnom8Sj7Du2659T+uRavsYsvk3BxOXda7REFH5Ro/kgPZhDfszZ3DN+l
wDWh8NxOvwxCij/gbpsjtX823Shnlc4g/GWFL/FYU/PXPfpswjudqKelL7LT
pqDrLndMlHQ6Ybg7pNkGFLAKqGeeGkojRCWKeUqlKHCxeNdciDTi6THjLVqc
FCSv6xy2I6cSXre0nz+go6AvbuOvnVGphG2/dcnyHBnHR6/x+C2kEHFMt50r
v5Jxx+fVHpWkFELXbixqYxkZ6SL1Cj+MUwjG1Iu5/slk8FwTP2eSl0wYiFw6
Y/SADBKZ8lrUIYkoPOnDMSxEBl/gjuw+gSTigFidnhgLGXpSpyqCGt4RDebB
P4rnZlBwI3t0QfQdMSgk/6qwbAa+8zdF60bfEEcOlwQHac9AdP1Cjo1pAsGx
40HYlNY0zOJFq7YzJRDa7xPZo/dOI+iYadu3gniiNX/joXGGaSz4lMwf4o4n
amXCSMYfplDH7K68qSmWKNKMeHpt/xQ6RBn9zz6LJu5nXg/toJ3E+VN8ud0X
Q4j6xAC/+0njmJ77peBcGUwk87mN2z0cx90XjQSrUDARVKL72MtyHJHdnnVH
xp4T5d8luEW2jiO3rrnqZJM/occS22T/bAwZP213kbq8iYW3xETC3VF4tOxp
2VahTKQznjM46j4MMbbea/TiuxHU5WhMazmMtu+eMezzGiiUmF38rjoMt+Dj
tTYyFqj02idvsmEYFTt8H0WxO4H0LMLvZNAQLl8WtX6/7InD0rS5IZmDKGRy
ay13DsaQzsutHzYN4LU417cMwRBMmD+quD3cDx+9jK+RjSEQ4NqoWp/WD8MX
w3Uue1+gR64g9cHRfszu1C4X7Q3Hw9GKYq4bfRBW4M8IOhYN/28DDBeGevA5
x/xYlm8Cjv1xy32/1AmlKrEKkYEEPNwta/6nqROZbX+PRMslwuijXuqDN514
8TcYT4YTcUGrTMVRrxNWqFG8pPwWWspSE+lvO7BSKynF+z0JsWkanEoX2yE7
tE7gwZkMJDvQFHgxt0KiyPi7ZFIGMpIUfG9MtkA4KK1y4G8GOPt0tMM+t4A5
NlX2tU4mdtfyXHB93IJFvTM9K+RMxGY/XI5mbEFvZsZeQiobjdVXRfZxfEOM
g1mlcn4u1O/YaypoNCHy3Mb00P5cWN1S9eQQb0K4Rm7YzIY8bLZUv8DN0YTA
HUw2UWfyIBd4iC2q5ys8vub9t/Q3D09CuYeib3yFpSSLeYlSPvW9Y1fDLf1G
7Jot/qtYXohYsiuT8YV63G046v1zphBe/Bdv0B+oR1tyHWs6bxEOBsnzM6yv
h9+l7l07HYuwLc+DbjGuDrNdCzobdhRDxkGJOYVUi7Iqhbhv90owKJeK156f
YfIqX9NWgcAm4Q7uyzPVyL2NVqFLBJxyNH3Mq6vBavTJvD+QQPQJb+uImGp8
ZG+/qU8iMLcSn9eqXw3Oo24nI7U+oPLAVzOjkiq4FUS4ei58QDEXa9WOV5U4
Ed/ZoHumHDezTi3RPyzH7MN06yq7csT+KBXksC5H+BWvlUNe5XDqjaDVVy8H
SVxcam96OdS3m0XbMJXjcYFHCC1dBTr4XMYWgz6ipkHEtCCjAnv2x607mfYB
6vPOpJ0bqmAqKXGQdWMZyF2aD8L5qlAoPC3d3VaKF6Xbt7IdqMJENQvPYkIp
xjw/ay2eq8L1SneLg6ql8GHhz2jLrsLzcZFhb48SVAtWOj8xq0bxBGMq/aZi
qOlw0P7K+wS9T+km20wL4G+58fvfz5+w8orp7E7ZAnQ40/Qv936C7Gdd/wts
BbgWTS5iZKhBQucXsdDKfPhTap34jGrw1SfraJZUPjqeew0d/V2D8sCgXy7c
73Gt7efHILla+BxLoR/dkIucyamMMM1aHIwet0ki5WBxeSgq0qwWrwzEHkZ/
zoG/SJPrG59a3FjnG8v7NAc5t9OkitpqIVdnpae1mXr/VuvYQZc6CMzR3D4n
mo0A83YPyfx6GMjSq2m7ZsJnWglj9fWgYTpEc+N8Ju67xi29GqrHjhtnGmuO
ZMI+2O7OBtYG8Fy5Y0PDnAndT7Q3+6wasJ6rhU0CGWDdL3n5KccX7I2Mq1aO
S4P/8mMdkl0jpoKNZ+TeJsPnCZk52qsRHtLt1nvuJOP+FsNag5eNsB05zGyt
kwz7A9vVicpGTLTHNlf8TIJIjsmOOpaveJsZ5PbveBI2jM/yxll9xeaWxGny
/Ft80uVn0aPuzbju5fS0gERwSgxyO/E1wWZv151Eu0RYsCTuCBFuAlvbk+Vm
rUQs1InJdCg2gfsAa2cDYyLETiiZWlxswvTXM3kKDxMQeNQ0ySG3CZeZDz6L
exQPE/mXas+NmqH3dZvfi8xYvOE5fzLHohlqTwSTk0NiMfd7x9nWa80wM9Xs
mbwdi6d572x53Zsh9E7MknwkFsSBguDYt81Qjba2XWh9jd3i7YNZ880Qf7p5
cIr+NWZ2ct1vjvgGKQkeLRJDFOTdYh0/JnyDUuuV/KXOSHi2iF/KTP8GvozI
hDNpkeB+dFzbv/wbet4JGPYaRkJl+tZWzclvuD49Ysv99hUC3ne9/6jQgq/F
byunjSMgpfWaktnRgqiuSM6bpDDcTRAbjhlqgcLeK9rOFWGoXipo859ugRGD
ekVGdBhMMptKbWlaUfvgxqbG02Hw5KJ9umdPK4iZj/fSql/gW/+lPa9vtSJ0
32O+mOxQON/cZxnA3YaJA2dyebOCwc1EKTHa2YYZr/GbzIHBKIjJ3iIg1oZ1
DTHZMteDsVir8DX1SBvSop9LiUkEw3OnBmpt28AVHiudmB4E/y9W/PQVbfDK
b5h2KHyON3uiO+9cb8d84egLGVIANMosZVXvtGOSZwdDYnYAJgyEnm982I7r
LCfMrt8LgJh7qkZ4RDvu+6Tbs3EGILu1KD+vqh00hxvqbNX8UebZHjq7rQN7
0o958Bc8RXsPu751TQcWKgQTAjp9ofnkUsfN5g686vMZYs/yRYlCkZlXTwfK
BRcDmx774vWLizavZztA2ncgi03BF1f03nt3benEETOd4zcjH1OfY5qve7UT
d+P3fPezfwS+lDd8B5m6wKRikmGn/BD+Z//FqXF2gfE7d4oI30PQMOrtNRTo
gvRGoprrnzdGrP7KOh7owubHWTzPCr2RJqB9MsWkC9qn2U/1y3tDJej7g+0p
XUj8cFK14bAXLFyVxjdod0Nbx6L8w40HELWqaSUbdYNl6qX9dqMHmNM1rGy1
7EZ9sMjVTPkH8NltGxt/qxtxNOI/Ly97ILXxlSniuxHRPSK++6kH/gr9a3RZ
6EZ/e0sph6U7gpoLC0bf9UD75dOhT7J3ca5U7W19Tg82D6fWDNHfpea8KTSn
rAdkxbgV3TY3FNybcHrQ0oNzicXyvLfd0LeHV5yfphdnIy79uUTcgaj77VhD
416c2HMj0PacKyr2HfSroO9DqY2IRVG9C8z2G8Z/Z+uDzuMnm4LfuWD+gGPJ
9q19eO4izJLo7QIxxRSym0Qf2M1nY24ouyBEY7uBjHEfvm8vUM7Kcob1pQ18
ie/6sGOO7b1lwk0wxrSn+Wj1I/d36gHdTCfExf2szj3dDyvm4ZyUICcovflv
YMi8H1GTG6XlnZ3gkKbFgZv9KHUJXNer6ITOYsLlT2Q/HDuWWnVqHJHc8RZX
yP04Ikzn92zKAcIbS0gJGgNIlOj104y3x49PEtfidAYw9KPR+d0Ne5T5xE7F
6A/gvAzXdb1j9jCie0SOODeAyI3Eh7tjdni4cupnoMMARm4F3VSUsMPIr/GV
u+EDcHHrXSDV2iBuaDPPadIAbp3d2b9P7irsY33C9WcGsHfnY9e/rFehaPGX
V+/HAEyvB9DRka6gubePT2txAPNftjh9ibiCdZ1JgkfYB9FSo+MkQXsFFo2Q
EJcfhJfQri11fdbgL7FRo388iLLlvN7NhBU4eRcW7J8NInXAJZQ30gqbXB5n
dgQNYuehRjUTVyss7k/clho1iPIqJdonMlboiu/7rp8ziJc3ZRVj0i7ixZNT
0a/7BhHJPTevknwBrKYH/xySHQJ/Ylh7X60FGAqqUhMVh1A7H781IN0CS5yG
F9gOD0GKkY/3epAFpr84NAxpDqGF+TtDqYkFalWT430thlAvIP6Trdscj0T5
9dqfDKGEIscvftAMNAvrk5yGhnCv6W6/0H5TWAx3zrmPD6FqNpLnPJ0pPtRn
qjybHsKSw3xie6cJPGLMWt7+HkJkIL9A6EMTrBwrWulhGkbmq0cswgNnsRzg
aKQuPQyrOgff47FnsCg0QMvnPYyzU2Ic7XpGOMeWr7vXdxg08be+5osboWT+
2Us5/2EoRje2NjIZ4W7dof2nwofhUCZpklB1Gv8cwkx8UocxvEVlvFX5NBaK
dbNmW4bR6xWQ+5+8If6cKjWrEhqBWueId/EpfXh2ZvSq7BsBu50Hg/sBfbBa
xp0rkBwB18d/tbc260PY4ZFJyqER2PaQsja0nYKh/ymj56dG4GOSKBF2/hQy
a0d1zt8bwR86Wr89Lnq4epRV+VfLCMKnXinFhOrgZy1NiX3XCJZ8r18Wv6gD
D/05RVL/CE5IFYb+J6WDcMsO+e7JEWx7vj6ns0Eb1e5xMh9pRtH8hH3XWWZt
CJbIiT0TG8XldoGnL0M10S1jvk3IexSj7FO/nYfVYf1Xlu2h7yj+XWYdvFWs
jtnSTbSj/qOItN5ClASrg069aDLh5SgE5VTDWNTUIXGWq2h3xii+rbsQTyQf
h8e9ujO7u0ahMPOwl8FTDcLVB1/skhxD++sYK4PzR5Hpx+rnJTsG985AcZLS
USieHL03rDiGL/J3lXL4juJkR9CleLUxhIlc+TjZo4rbkzMyu0zHUJmXHdlq
roo61oRvgj5juHMwUkT3+hE4GLP/J9gzhtGfmfqMl4AL7/ZHCA2OYV9mluKy
NHD6r+6uvWNj4HsSUnKYFlB89UxWcnYMXE8FMpPiVEDfz2SiQkf9DttQYLc8
oowIa/p4E7FxKHFYG+reUkKl84JM8N1xyJ5xOO3dqID31bxlLx6Mg9WaUVL6
rQKSeBTUI3zGYRIfTLfTXQH+hbfOxgaO47BVLEfBfgWcXfp5LyNhHP3+zUKf
g+VB9qZU19WPI9vjg/juywfBGzJyho6fBEOH2gdH5WUh77Wd+6YgCaRdNJKn
OWVh5GTybViEBNGNHnnxszII0vuqU3GAhLKmP8m/kmSwiaVE1VODBN8Xg0IX
tstg+WGwGM1NEgJ6hAoZuKSpvaRKs1hLwsJM7bvJPVJYf/leqc1XElzL3yn3
MEthh1HBne5WElhvNNGvkCWpPSfxq2iAhF/HDIbb8iTRNss76fqbBIYzlI5q
NUl8vvr925+dE/D6OqhS0SOBdNPXb+duTyCssEy968M+yLTvWmC4P4GBWC2Z
+ZB9KNZ/q73VawKtp/55mV7dh5oT6d8PP5vAG+vQF7Mc+zB8sOSQf+wE1Mf3
5WhcFcUWzo7GPbUT8LNS0zAU3AvPerb589smcbU9S5q7QhiMGsGajjsm8c5A
2HNLjDACKrijvIUmcXmvUKGBmzAii/hVU/ZPQozugusNGWHkv9v3dP7oJEZ/
i/jrJglh2lt9R7DtJCgv1UVFonbDWNldo6Z0Ei80N70QSBFEz68xtvLySbjL
TjBI+AviQrpue/GnSdSwuBpecxSE7XYB64wmqk9Rrl+RF4TnulKvF6OTEPUy
FrlRsxPpVQtlVixTEK5Znng0uwN0ui6y685PwaTyqWBPqQD8GPoWFyynsIE/
0VDGXwBshFrlT+spcL2qs24zE8BWSS4DksMUNkv1W/6mEcB+jlyHRu8p/Hq0
YvxSgx8mbd9TolKnIMtKE880ug1ZZnaCiotTmPQr684/yYsLebP8r9dNQ6Be
OHiPEC84N93kZdgwjQ/6Zl0DC1vgUniHvfm/aaQGvT8o/HYLFDkfL18VmcbY
nYtyf9ZvQfnnuK6X+tMwSVPapPOJGy0yHUF/301D9sXUjip3Tjx8Yupvnj6N
N9G02jrnOSE31OdblTMN7Bi2YTvEifCAUY/nZdPQCGikO/xnM85P/rDf2zIN
CkP3Vg2nzRiLYdE6uzKNrKCUvlgnDswzHaUtPD0Dm65CC+YIdnCQWUPKTWbA
3RIauuTOjn1NXbvrzWeg1ZGUtsWaHWZhTsf7r87g7KT0o5oD7KjYFedLf38G
SVkh42yRbPBXWseu/2YG5vMZe2N4WCFkT/BN/Z5BlI9XfY0aM1ROPUn7+W8G
jtc0fv3byowzMsYqyzRkyDkLnnCaZYLfAtn8P2YymJV4GoQjmTDrIxB/cDsZ
nVdpx+N/b0RJzL293upkRDqOu4XmM0K/6ZAcfzgZ/MfyPqVbM4DpEPPHkigy
1OUblm+AAR8TurTOxZPhYrB/4t4WBkjedrV8lU7G0QzrP+fr6MG6Pf8pbxUZ
5btc6VRl6PHZ9sAw1w8yLFvetctw0OEw495AVm0KFq4vna76tw7zjvNb009R
sEHgKbN6zzpkdH9K1DGmIPALJ2mlZB0EMqyLn16gICTbOoTLfR0WTyeMMblS
oKzHYlBNvw758duVN7yhQEg+T2uajwb2LJRPb1IoMDiXEJJLQwPhW2X6x7Mo
KLSkCzz3eUUlRPP8lYclFBSUz+25arKi4vQ9Ipj2GwWW7KkjDA+WVURNrwnE
d1Agbcro+EprWWWwUiFJtY+COUNjv2fcyyp64R1lDyYoYBV91foobUmFcf27
EzspFDQcUq3wd11SIWxutXz4SUGVu1LerNqSikvrcXOLBQriQ4U2pXEsqfzf
/z+YIXNvRf+iyv8AicEKsA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxF2Xc0V3/8B3BlJDK+MlKoFEqIjBCepURWQhRllDSMUJRUhBQVMiIZWZW9
s92ykpHI3tvH+nyUhmT8Pn7nd/ze/9zzOOee+8frPF/Pc++5Oy9c17+0noaG
5uM6GprVqwS4J1dWKATN/55Z6D9qSJE2/3/favS2u1xGXnNLC/PkR8uZNfN/
uM55kG96zXk2lfRsvZNrtngqNdvpObHm+SC3xwRIa45n7eMNHxxbc6SmlNM3
39E1e9pa3t57YmTNbrTJt5xmhtZs6dG4u+3d4JpDS0fDI68NrLmof8+mVMG+
Ne9iP6xqGN295mzRx9eGhjvW3F+VtUNOrm3No2KhB4j339b83/0kOYl1TWsW
k6OIJc7Vr9nr2MzXwtuf1qxd35C5saZyzVyG6YFnecqJqPIV6qFg7J6bBF/b
ByLKbfp/bX/yeXjpXoLQdOZYXPXQS7rD9p1lxM3mqr+rNhq5NS7gW0Y4mh/4
vepAX6lDfyzKCPcHxXOrrpWY8m+ULyM+/0qdXTVdS8LQW/YyooxhZHrVcDWT
8yCVEtFucqRV3xHY4nfmQynBxuE4tOrciqZeyfBSQjr9dPeqyVeeSG10KCUS
ZF42r3oPq9rDQfVSomNl4NOqL+QsdxRuLyWODBBFq448UyAW9KeEYAjJTl51
25Kjx7XGEiL69bawVbPH72tRfVtCWDmruK9aU2NUZJt7CUFXrHBh1d4z0W5z
RiXEYAYNVl0WdKaxTqKEcLEz4Fz1/EGOXQkMJYQmOW9gmeoDvXUud/uKCb63
l+JWbev5sNbwfTGR5aFjvOo3IhAQ9y8mev/+WVyierB+3pHeuphQlnYPXDWf
U3ZVr3Ix8TTmDuuqjXhsed9zFRM3N006La7Ot0TIzn+miJDN5C/8tzpfy/4P
1lVFBPNgRPfC6nw3vOREVBFRxbH07S/VKqn6V3ici4iNGc0R81TfPrWphKJd
RFAMnEX+UJ39u4qtZncRobfYc/0X1f7JceUqfwsJ9ZxY+TmqbczcnfMaCgmb
Cb2gWao1OM7tEYsrJGgZu6/MUL27Wr47zqWQeFJESpigmuYOlz+vViHhdeLC
vlGqe8V/HA7cXkiQQkk9/VQXDX6ZY/hZQLDdUwntpPpFaMqbezUFRKp1rGgz
1U4nHp/9GVlAlBaz2X2m+uSS1SYbxwLiM8NdIYJqsawjxKBaAaHsPcWZQzXj
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
/z+YIXNvRf+iyv8AicEKsA==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxF2Xc0V3/8B3BlJDK+MlKoFEqIjBCepURWQhRllDSMUJRUhBQVMiIZWZW9
s92ykpHI3tvH+nyUhmT8Pn7nd/ze/9zzOOee+8frPF/Pc++5Oy9c17+0noaG
5uM6GprVqwS4J1dWKATN/55Z6D9qSJE2/3/favS2u1xGXnNLC/PkR8uZNfN/
uM55kG96zXk2lfRsvZNrtngqNdvpObHm+SC3xwRIa45n7eMNHxxbc6SmlNM3
39E1e9pa3t57YmTNbrTJt5xmhtZs6dG4u+3d4JpDS0fDI68NrLmof8+mVMG+
Ne9iP6xqGN295mzRx9eGhjvW3F+VtUNOrm3No2KhB4j339b83/0kOYl1TWsW
k6OIJc7Vr9nr2MzXwtuf1qxd35C5saZyzVyG6YFnecqJqPIV6qFg7J6bBF/b
ByLKbfp/bX/yeXjpXoLQdOZYXPXQS7rD9p1lxM3mqr+rNhq5NS7gW0Y4mh/4
vepAX6lDfyzKCPcHxXOrrpWY8m+ULyM+/0qdXTVdS8LQW/YyooxhZHrVcDWT
8yCVEtFucqRV3xHY4nfmQynBxuE4tOrciqZeyfBSQjr9dPeqyVeeSG10KCUS
ZF42r3oPq9rDQfVSomNl4NOqL+QsdxRuLyWODBBFq448UyAW9KeEYAjJTl51
25Kjx7XGEiL69bawVbPH72tRfVtCWDmruK9aU2NUZJt7CUFXrHBh1d4z0W5z
RiXEYAYNVl0WdKaxTqKEcLEz4Fz1/EGOXQkMJYQmOW9gmeoDvXUud/uKCb63
l+JWbev5sNbwfTGR5aFjvOo3IhAQ9y8mev/+WVyierB+3pHeuphQlnYPXDWf
U3ZVr3Ix8TTmDuuqjXhsed9zFRM3N006La7Ot0TIzn+miJDN5C/8tzpfy/4P
1lVFBPNgRPfC6nw3vOREVBFRxbH07S/VKqn6V3ici4iNGc0R81TfPrWphKJd
RFAMnEX+UJ39u4qtZncRobfYc/0X1f7JceUqfwsJ9ZxY+TmqbczcnfMaCgmb
Cb2gWao1OM7tEYsrJGgZu6/MUL27Wr47zqWQeFJESpigmuYOlz+vViHhdeLC
vlGqe8V/HA7cXkiQQkk9/VQXDX6ZY/hZQLDdUwntpPpFaMqbezUFRKp1rGgz
1U4nHp/9GVlAlBaz2X2m+uSS1SYbxwLiM8NdIYJqsawjxKBaAaHsPcWZQzXj
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
/z+YIXNvRf+iyv8AicEKsA==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.953106162971312*^9, 3.953106188273471*^9}},
 CellLabel->"Out[99]=",ExpressionUUID->"8898f991-5b26-4845-9ad8-e02c70b368e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Erf", "[", 
          RowBox[{"7.905694150420948`", " ", 
           RowBox[{"(", 
            RowBox[{"0.08`", "\[VeryThinSpace]", "+", 
             RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"Erfc", "[", 
       RowBox[{"7.905694150420948`", " ", 
        RowBox[{"(", 
         RowBox[{"0.12000000000000001`", "\[VeryThinSpace]", "+", 
          RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], " ", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "1.0"}], ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.953106289211678*^9, 3.953106301308206*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"94d9132e-60e1-41d8-9923-566adfcc1e03"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
zAAH
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
zAAH
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
zAAH
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-1., 1.}, {0., 1.}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.953106302042925*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"9a7e4bc0-7a15-4bf9-9a6a-68970ff1bbad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", "10"], "+", 
           RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Erf", "[", 
          RowBox[{"2.5`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "0.1`"}], "+", 
             RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], "+", 
      RowBox[{"Erfc", "[", 
       RowBox[{"2.5`", " ", 
        RowBox[{"(", 
         RowBox[{"0.30000000000000004`", "\[VeryThinSpace]", "+", 
          RowBox[{"2", " ", "\[Omega]"}]}], ")"}]}], "]"}]}], ")"}]}], " ", 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "1.0"}], ",", " ", "1.0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.9531063438859787`*^9},
 CellLabel->
  "In[105]:=",ExpressionUUID->"faa061fd-e20c-4bac-93fb-22046fbb6a3b"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
P5jiLpCvHl3V+T+xvHzY
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
P5jiLpCvHl3V+T+xvHzY
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-1., 1.}, {0., 0.9999999998296738}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-1., 1.}, {0., 0.9999999998296738}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwt2nk8VN//B3AiRJZEyZYlQgiRqLyLihIhS5GtRahsWSoqIelDyFahEKFk
KURSx0727Ps6M2bGmJElkuV37/fx+8c8no977nLueZ/XOffxIHnZ3ezaJiYm
pkDsD/6rDDuoGxsMpPyCvIH9gtmTlpwD9gykmdXwP/u1hdy6/oOO/q48+J9l
zRpyBPjoKHGheh13VxcXtdJxBvHZcK7hzmzLULfnm0FlvXH/cN9pPPpw9QcN
Ze5y/4v7TG3Pz1e3aOjc79N/cItVuAtoitLQlFnRb9zRFon8ZgvT6KliBR03
y3QN363maVRVpTGNu1xjIOpe6TT64befgts3kMETljGNBEOXSbhVmlgj46On
kU9QBAE3RVCYOz1gGunlk8Zxv3XYH1HgPI3YhphHcV/KOcH1w3watTv3DeLe
8efif03HppHZ0at9uNuOuW/pV5xGx8redOFWJP1tGJWaRivHkzpwh4WHhJGE
ptFGfmA7bt2eV+wLrNPot+2mZtwp/nvqV1ao6PqD5J+4VyXyQ5l/UxGXmUg9
7uIbNZt5h6lo8VpVJe6yrp22RzuoqKUt+wfuiqM3im7UU9HlvS7fcDfy8l9p
+ERF8s88inC337lW9ieTiuKHCwtwd4+XbpNJpqJrr35+xD1WaF/xKJSKmpmv
ZuC+7LyFJvSIijbXKLzFTRQt3FngT0XROoQU3NTHbO4jHlT0brNyEu5Fq1yx
wzZU9N1C4Pn/xnOr1ekOCyoaIV+PxL1SweTjYkJFZgk54biZFMybX5ykIjKN
ORQ35+rKvYX9VMRPGL2L+1lBRma4AhV1CX7wxc13zbhDSoaKblk43sYt2Jom
bypMRR434m/ilkg16MtlpSLdm+x2/xs/8zmWkxsU1MOsbI1bZkvy/qG/FMTP
q2OJW8GLEcrJoKBbr4SMcWucSNC43k9BJRvZR3CXLoPjeicF5TFxH8KtnUuJ
iG+lIFVNywO4j+04SqiupiDPrQny/6tX8mSMRB4FvdhVJoC7JfnZj5Js7PyN
g7y4TUw1qcbpFCQgH7cFt0XZf8fvv6SgoRu0tXXMDhGqs/1BFGRXzUTEfa8o
JrTlPnZ9veER3PFD86KVdyhomvVVH+5GxS+ns90oSKY4pwn3gRbtdF9rCrJp
UCjAbbyYpOVqQUGtbvRs3M5ia222JhTk0Byehjv5Flo9cYqC1GNNYnCz8Zyw
3K5GQdXaNE/cEgff0diUKKji3nUX3Ift2IJX9lLQ/j/FDrg98hryx8UoaI/Q
T2Pc/cZGWwq2UNDovTw53B+jLMvPjpOR9tnEjjXMdSUlZseGyEjDpacO9/io
EOVALxmdSukuw71DZVBQpIWMtkcIvcX9sN3enVJKRqfPRd7CnbhcsXm4kIxg
o8Ied5GEVHJ7Hhk1V340xU32IDSUZJCRz9YP6rjNtrlIhUaTUZ6cwNIq5pta
jaV3w8lIgItMwv3Ecd+5W6Fk5OLn0oO7/NOMv3kAGQVGuhXhljHz6pZyJqMG
DfObuJdj/MMQkFFYPnvjP8xTopXUU9pkZHuD4zPunkw2o1Z1Muq+EfoKd2HZ
823D8mQUlMZwwu02kZW4sp2MpF/K/1vB8+TmzOojHjLyTasfwW34R81+yxYy
umTRXIlbjvOHtND6FPJ2WXuMe1K166MGeQp9/C+DDXfHt1283yemkNxbceJf
fP6ftPc8MTyFzssSq3C/uUjVON8xhT7tPh2A+8IjJuRRPoWCelhJy5hb2xV/
5URPoZ+sbc+X8P5bex04ED6FhgaPXMGdQyiJL3s8hSa9ig/gDlvWtf55bwpJ
Fxb++oNZT+LiJOnqFJJXusiMW+3Dm5Nu9lOI3zymcRGvH3VC1uLFKZQYlBuD
e13f/SbruSlkVnt7N+5S98eLklpTSGR3isIC5qy/jVbvD0wh4nkD6jzmhGC+
MhXlKbT9WUY27tsvkh6A9BRSD7gkiVsZfWK35Z5COct8m+Ywp/OM7Ho5TkK7
bG3uMTDH2AC71hAJ7Zd6IY07KDt1ob+HhBbaJJvoeL7pXmkTaSahf9Msgril
fMkhKV9IKO3h9lgaZv7q017HPpHQ665RJdyb+HLsx3NIKNu9pG4a88T7W9rS
aSRk3ntljornzfAcIzOchLabZatQ8PsrmA/rh5JQJ6orI+P39ytuJAeSkBVf
ui7uy9vuvFPwxZ733g3DKcySJ9es8xxIyO7u1mNEzKkf2euKNUioe59/zhi+
3v11LrRUIaEmY+WtuANPNaYuKZCQK9+EyyieH2MR/loSJKS/IiA6gnm3AL/q
d04SepYqbj2ImcfxtrjdZhJKcjNOG8DHI7eLa2ODiBhrXMR+zCP6L0jHFoko
wHnOsQ+vH3/R5JpRIkp49HF/N+bIhvtPrw0QUaRIxMUuzA8ER33ZuolIt9f3
YSdmu/w0U4NGIho22It+4ev1pCx7cxERbbFe4mrF8+aMqlfnUyLyEfFurMW8
h+tMY3sIEc0XRqMavN6aLku1PiQiPYZ8QTW+vp2N62jwIaKkjbDgyv/ly5La
D0ciIl+nzJbj/eXlC/92iYiyyofQN3z+t8lNlloR0Svmwqdl+Hw1sY4tNCKi
i9JfuEvxfDn/fT5bi4i2B9V1fcb7t73HMFOdiMJ2Bt/5hM/3Lnp6+n4ikjD0
3VGAWd1CwvyNDBGl+mQcy8XzxCq4KHYbEZFCwwyzMEfZnPZ5QCEgpo9xMon4
9UUvt/gTCOi45WHHl/j1h+7J3B0loIGFh/EJmPNsP3bf7iagLLr7VAzmZnve
gy6VBBRnlKcUjtlcQi7SqRxr38G57ynmwbFjpCslBFTrJCDxBF9vHb0S7HIJ
iGaQNxuEmeNq95/zrwjoVZOD3D28PvbQjU3jCEgxN2LUD/NOIluWcRQBea1d
eOaDWdbpkNXpxwRUivSaPTCfdE4q0fEkoAjPS51OeH3edLwjf5qAutNqCSZ4
PUTaJZfpEdA2PokiI3z9+2RTYaiDPU/WU58zmOcWLTjcDhAQ/4HsFj3Mjg/P
vPwsRkBSsl+aNfA8SdMv1xMioIwmNVk1zEI1J8a6+AlIuIfgroy5nQPkltgJ
6Pb8dIcsvp7GHCg9PDeJhBeut+/A66VIZaiZNokMPfwy+PHx7FFispuaRIvn
PjjxYC4QkTMIHJpEgYb2RZvxen8n2ldTN4ncTfhvza9j9V2yedkoaRLZuSbz
NWG2HtgkOho/iVqKX6fXYv6yugEe0ZPos9XI7grMbsdXnsQ8nkS7GN87ijAP
N9J39rpPImKmoNBrzIdmpg87u06imD+HphMwx/FS7P9exY7/KM+IxnzWfDJL
xHoS6Yfb/QzGXD7cq+lwYhJFZ/O2OmMWYuq2+a0zibR2n/jpiNlbquNhkNYk
Sj6enWWNWfF6c32G8iSKUzDaehZz8myFFUVoEln+7nNWwuzP8sHPa2YCSS4m
cFDXsOd9ZcfmQJ5Aencik8YxX96/Pd5ocgIJTzN4+jGfsQn4LNc/gS6mQXw9
ZqFC45mRmgnEd2J+ezrmosvzlw2TJ9BzMSvv85izl7N+H3oxgezHvPsMMCdF
XgqUjZlAW0JeC+pgDiqrfc0cNoFSr7LtksNsyv+yr+T2BPLQTddYWWUAvfKI
8R7DCXRE8NLZBMwTVr+Htp3C7j9PZXqKuXvm3Y2NYxMohP/jY3/M5bt4nw4c
nECDXy3W7DGHe45XR0tNIKmR/lhZzHKSoVprf8dRsYdj8/t/DBAt0W6gLoyj
lGBrzVeYeY0Yln2MceTSv3Q9DPOfOxe8C4njqHtYa6cT5pp2hXyXX+PolKvM
K3HMjoFte3qyx9HCBZUHwSsMsOxP0RlOH0fnt340ccd8Rs3jAuHNOPJi4hm1
xqxO4IuYixtHr9bOKKpi5jAwm+d5NI5iq1I8B/5i85m3u1L/4jgysrQgi2NO
d343aGw+jljKNgmwYX5Z6bNocW4cVZ8rmqEtM+DR7R3yV0+OI53IS1lfMZv3
WkUHqo6jqdp6oXOY/70ZsPu6ZRxl3tMVcFliwOzShzsVrONoh377+zOYCSb+
MfUbY+jKlNzwPsytm0TruhfH0Jhfp9DMH2z9cbJVmhsfQwYpmTWumA2Ux/4p
lI2huSUxqukiA44+KRBUKx5DrqFZHYqY1cYC92sVjKHAM1Kn2DGLxEhe0c8c
Qw9mfzWULWDjuXi58UrMGGJ3rBQSxRz/nfgy2XUMMUlrfKmbw/L+TuIDzWtj
KLfRpCses9yBc1c77MdQtEmv8VXMZdml+zksxpDX47emG7+xPIkNr7sNY6i6
8u0FJcx7XVUXzgiMoYms7ILrDKy/e0j9RJ4xZOv79sM+zF9HE1HgljGkuHly
jE5nwIsPHDturY2ihmdP/nphHgvM0zvRMYq+bfV87TnDAC+llTdz/qPIWK8g
/9Q0A1jTr7jKeY6ifbwEuzUqtp8QatGwcxpFf2iGMoWYv7GkNv80GUVtT77N
iGBmHTi5kiozitiusMhOkLH2oc8tzrWNoNeh9hQdEta/1RWJxzUjqIx5pItI
xPrneZVW9nUE/UsSzQ3HPHpJM1g2YwRdsPUV6iLg72O4YO3OCGKzfvXUahJr
Pyq39aPUCFI25daWHWNAwBHm3EShEXR8lLW1chQbn1f9Rk95RlBUeLDBJcwV
Zv9FOa0MI6beN6RnIwyor53ml+wYRkHzTPcnh7Dv6Zy8XQmPhtHbu64FFv3Y
83I8KQvxG0YUyj/nkT4GWF2zt7l9axgRwrcOXcM8IM732uTiMBIM2iB69GL7
7+eeElyqw+gC79WDft3YePup7w0cG0Li/BFSur+wfO3a2uDWM4Rob1KEi9sZ
4KlKdLZtHkL9i5Asi3mBGv9Bu3QIrRRr7d/chtWv7ZLSYtQQkv7rc6igGZsv
J8rUXWEI9XJbUcvqGSDNd0zX/M0g2uU9afRfObafUBm/5xo7iN6pFjqXfMPX
66DCwLBBpFHLc2qiDFsfn9fsyfUaRLIqKeqqX7G83H6anU1/ELkFclgUFmPf
EzvMmksYA0gm2EXhRB72Pa85z9pKGEBHmk24DXOx7wWruKOE/gF029zS4dxH
Bri/7MnjqxlAn5/LHDf5gOWhsM1zl5cDSDJXzkItkwGuYlctRY4PoF3b1Kle
r7H3e3RzlOrBAWT7pviQcTIDdOwy6/X3DSCR8z9fyyYxYHsK+ZC34ABK/GYS
1/oSyzOJWyItlH60QGSNXInF9lt7fMcexPSjP+0ift+fMuCzQpjrxGQfuvrj
43i1F7Ze/XL4uq+/D/1yePD4qCcDIvy0OHxa+9DzcoGkQncGXKuhvmP/2oc8
au5vir+JPa+d0bhiZB+iZaVuU3RiwP3n/Bf8DvUhznMJSe8uYPsDzenMCqU+
ZKMt6DhpieXbSPXiFuk+FDXTpCpmgb2ffT6xydx9SLLlxUCIKZbPNb2tlRO9
6AC9JFr6DJYXy8kntz7rRXKBs19fajOg+I1PnEVQLyq0/CwYdwjbH580nnzj
14soqh+3hR/Exvv5RqDq5V7EmcTadkMNy8N9l8stNXuRuejXlCV5BgjY7z2Q
Nt6D9BdQjJoQNj9qP0kcPNiDROz3sm3+TYeA839PHFLsQXXs9qZxdDoIjR9z
0ZbqQbom0ty7aXQwWW37pMPTg+ITbZHsFB0q1Oi6+qRudC+w+9b6EB1SUxSu
XUjoRt7mUrSf9XS4fDf9/b0/XSj10SX996/osM423RJA60JWHySeJCXQITFO
be7BRBdaFjEPDIulQ0d+pXZwaxdKkncLM3tGBz3SaFN4ZhfyXssyzQykw57z
ovRkyy6kY/1+XN+JDkTFeDX0pROlbpRZn1Wig8KDd3RyTic6c5lwQ0ueDm5t
xR/40zrRiz1+d3fL0GHZs0fKKbwTBYgouPeI0oGzZOd2bodOZJj9gIvBRQeV
44nz1ls60Snb1xa15Bnwt0gp+mPTgVyj9hgOJM9ARWa+h4RpB0pKeRQ18GIG
WJeR4plTHYjObsvZGTMDkYljGa9VOpCdtvWzj2EzkDoqGX9icweSnb2/n9l7
BupcMnxi8n4hG9ZZPcXTM7DtwfuDysy/0KJBoMH1GRqEfpFr4FtqR6pnlc42
TdFghZ51cZ7WjuRWELPcBA0m7DMDSvvaEd91Zt+mHhp8Pp5epVvQjpLehCiV
IRqYbX5tbGXfjsSkoyzUo2mwd5dkC5N/G3rReG3nf/towPff7tlapzbUonVe
eWMPDZZXxLaHm7Wh5mbOnJviNGgYEr4oqNCGbpb/blPZRgPnVAGifH8rUluO
SLP9Mw0f9nKsmWm2ohimyqsGaBoUDzIU3803oxDpn69tDafBSfnhw6/Dzaj6
ojvxiN40pMjydrTUNyNXuvy+7YengX/nfr8/Sc0o/bt3YYbCNCwtuVXqn2hG
nExprTZbpqHqK92CGteEFMyPHRSppcKFo/QH+w82oni5d4RpDSoEn5hp/3qn
HrGZHbvzbI0MVQa0c+pX6tFr1ZJQj3kyMBlNt+YZ1SMmuWM1hhQyBFhQmtOl
6lGWJAeJ2kUGXydiw7PmOjT3fdi/OYcMzmHDFY4SdUhWPXZR6gIZzja3FGxp
qEHGJpFtpjlTIGieF31xZxUqdPvB/vYoCT7/qeVt2FOGTvk8/bz30iS8GyQ+
o4TkoVNfTpFdBMfA1lS0aPBKHDo1lXAvfu8AfOX0767yiQUdx/4A/k9dkKok
2JkvFQcZB+XXPyV2QahJfntyWxyoHMxVtAvpAvOEySZf+QSgNY41Dll1wazk
2SqF4ZcgUs2b4L3RCbJaYvkxJ94Aq0jjAWHTTvhZaH/i09MM6O74kRK7/gs0
JpjFH13IhxFjgeoejjZQLrP6rfI+H3jy6hJTia0gG5NbM/Y3Hzh9hLNCqlqB
K+2jRqpRAeTJNdxLCmiFVZMLQxv0Amj519LCOtcCwwX58kj1M8wOJ11vGm+G
FA+7mqMlRbA7U8JGv7sRki9tyYsfLYLybK82x+JGeGlQ9GKGvRjEzu77mxDf
CNESnDdeXyiGqWxld1PLRghsL9629rcYlMTUp9n6f4KjCrd9+ZESMKC+KLg9
2QDSs9/+ald9BUlPTQX9rfUQ0KIXsjCD+Zv0HrOZOuj50MSTt6sMysrvyge0
1sF/1walJT3LIMtP/IjS8zqYHVgxYpf4BnyKXN83CdXBj1qtt533y4FJ2sTS
e18tWCeVnLmphYBw/5+ziks1FN2BbplrCO7M9IlvNa4GHst6+9FoBHmPyt5v
PlANlXy93mZkBBnX1bnM1qpAQM//XLJhBSSW2EcYx1aBf2ni3aCVCjib/MW/
saYSTqf3txhfqIKvchGd145WwOzjPKfaW1XwKj9rq7FsBbx0Dt44HFwF/zIu
qpvyVgBZSUlVPq8KTr3uFjGpRhBWGhjHwloNngdKVBV5ETS07LUpza8G3gfv
rv8s+A76yz5kSfZauLFf5neq8DegD5x59FK0Fr7dt52jzJVBwvfdwrxqtaBH
eGB/takMSEE/DVcv1cJq2zkiLaAMQrnF8ns+18JvDg93g4mvUCdV4xNuVwcv
m0PfsX8phZNG/CyLxfVQdNWMPTbwC0Q6bvn992c9aHJ9Ocri+AX6fJhG14fr
4QJvn0Li8S/g+oZexsHWAGFhue8Os2DtGY1eopYNkOZpEXQ6rBj6ngdP6P1p
gNj4UvLtV0Xg2rNQGXOwEWQUe6VEej9DIXU6/8WZRri3/oNTqvwzrK5PvE62
awRZm9MhhmmfIXLvr7uZoY2wNBWRtfkm1v5OrmpZTyNcSojm2c6CtRd2Shv3
bYKZ8IEbPpqfIMq+N1ClpBlGPlXqEDzyIZR2BEjNzdCzUHPsMOTDg7tv15Im
muFVqSmpnzsf3GJv3WPnaYFU2eBOWk4eGNezeI9cbQFdXmZdh+lc4Nmvcj2C
vxW8Xex0D/p9hMj1MCPyrTbQFJYNuFXxHkLD6Vxvgttg76GyONEX7+GBkHnj
+VdtQK87ZrXF7T24qe3WRzVt0CBSkJko+h72FlpLNHG3g8fvhW1xAdnAPjW7
6+3VdohsFxtM0c+CemMxbhP+X5AormIhwPEOBJTHd3iJ/oJ4kzD6PnIGOHC/
k4iT/QXsEf3HPRsyYKVJUb1P+xdAWJtaCJYDiqeP2Dhc+QWv7o7x1HJnQLSe
zXuPol+gEuHX8kg8HawPvTr53LIDfGLlp13s0yBzp+25QocOCCz4N9dyIg3m
/0hc7HbtANO2Lb8vKKRBRHH2zV0PO2Bp6wDL5GIqILXS2LSsDlhfHFmpjEyF
PUq945+WO0A1Wpt1IzIFZiQFH3QkdsIezRfchlnJcMg/zbMyoxP8FO+EzPon
Q1CX0rWCvE5oW7pv0m2SDDuenDobWdUJhFWNeJt/SaBD8xM+Q+0Eerh/mun5
JIj6MvClUqsLtMt1XZJ4EkHVMJVR0NcFbRvyo94FLyAgQ3EyZaILCryHrl+P
eAF1a6U9kbQuOPrnhFWU8wuwLvj1/SZTN6wbb9d7IPkCggRZIuTkukGAX+lc
e3wCdI5ek0v164ZhwSpTtrB48PHe5xi1owfIwzY/O6NjYQcno9xSsgfOJMc2
OHjEQmnKZyFxxR4IVBEOlDKJhdVGrfaPx3tgB29Ypy5fLARJGkDjzR74b6xB
jx4TA5GtV8U2V/dAXMmYc07ac8iUe9N/z70XtEhXoq1ro8Dgh6OG7r1eyGe6
MOkXHQWU8zLPtzzuBbL5GH3aJgoUH340eJnYC6Ka6dw985HwubuspLi2FyKq
p9+l742EH0G98bMifeBdsC+24E0E9A7xmTk19MGMqyOPcP1TOBN+rc+7ow8K
I4Sc5988hXKtMrvgoT54FBafyun3FFITrtxIne2D+4dnD//e+xScTb6EDAj1
w+OYQOH4iDBYqbYpMXbpB7eqf2wUhycgmpMpqsk5AMaMhzrXDzyGyIv/3p4U
GABb3j4XM/7HwMRhIm8uPgB6kcatHr9DgHD1r4an2gBw2wZsPVUQArniZ8/l
WA9AUprRv9MqIaAT8/vR7pwB4LruMO+jFQwOd49MsZ8dhJWTxv5Obo9A4WpD
N91yECy6eh0mTB7BvLF5TbfjIMgF1v6LOvAIQvfcTEv3GwQNpVccD/8Gwse2
JBtIH4SmatXE9CeB8FfmX5vvCtbenaAbdPEhxHR8LSVmD4HT6PY7vioBcOn7
yazmwiHIpCGdfKYAkMn+FV/4YwjyL7MUH/rlD6X3KV6PuoYg5i4j/vBtfxiR
26UkxjQM7C6HUufK7oHCwztp5lbD8Mjon0HRhbtQvU/zv+rNI/DR3+q9dKMv
2O03T//NOwKru5+e48z0hWU1z/LdwiOgZmLGrBDkC4raOXR/5RE4lqUttf2w
L8QZ7D6vbjUCT4zUPwXl+4DTNXbRd9kjcPpF5b3wt97AkdKbG2o4Cs94PrNv
yveCt28X6oosRqHdJKvU6bkXHMncNjZhPwpGNorHV257gUeuIT94j0Jktc3n
j1pe0P8N+S4lj4L3a1cJzXpP+NCXBc70UZA8fnMuneoBslvKyRkGY8AbevEu
y1s3mKtXdn1rNAYH/NEjZy83+BGaNp1iNgblrAe8duq5gSXrE3ripTGI2v1Q
15R4Cx5vmC5Ee4xBroTraTmlW0BYnNoIeIkdd795naXxBryd2L7TgjwGFXPt
N8M1XMAtLfSl2cwY1Lg8SbzE4wLaDn93mcyNASVA+p3rlDN0DI+IGq6OwUFn
/b7Dic7A3P9e6jjfONR/dQvL3uQMDtgWR+nQOLzZiPKyGXECsfIbJzeHjYPp
nvzguh9XQWDXyorbs3FwfsEr05p0Fbb6hhX0xYxDL49RId/dq7C6/53Ix9fj
YFDlwnlS/SoMpI/8NiscB2Lzs3n73CuQEG76JnVkHMTt105xfbgMPDaaS4c1
JkAoK/5OeaMDsJXWfnynPQHbCCWJt/IcYE3A/DLvsQnI5PvpZRzjALRWj5aJ
MxPgNDbC8sbaARp1P6Q/dZiASwzPTX0D9vBEQcykN3wC3joNZGwctAOmlU3v
vSYmQGw8bp59vw04TPbPP5yaAFbaGyKw2kBFc4HOM9oEIJEg+W/91hCYYteV
9WcCnEmLG3cfW8PGibKNIc5JqPd65889dhHWozwt9Q9Mwq2L9pfV0i7AqswY
i2jIJETtko76aWIJl3hLjOWfTsIRhzPpH5QsoXz52auDkZOwU+PmahWnJQQ0
Hd5v+nIShG2tpV7WWsA/jxfWoR8nQbnv02DjUQtY+Wb8abZrEtjLuvM5DpnD
kul3u1oZAkwhamixqRkE9ecP6+wjQHDae7W7ambA4/j2UqkKAZry9kp4bTcD
WY8n1jmHCVBv0mOxqccUzCNNLZ+bEgDimq/E2JpCQSPRyPY+AfqfiX7Z42sC
Lno8Rxe7CEB1sbNPjDeChUamcrcBAvCsauTKXTGCQLN5bfIoAZY7n61tVTWC
l459hwapBDhirXipu+Us1D18q17JRASzHu8TFlxnQar8oOIzRSLwxkjeTYg/
A4Pq9iIyIUTIWDnA4T2pD05/NXgfPyVCbIwpk+83fZj9vpWFGEmEJen56bJY
fWDVL6NmvCKC8EvlEa6T+qB8UbBsTz4Ret8eF/7x4RQE3m+6sGeACKccnrzb
HHQSZOs0E6RVSLDlxniqma0eFPzH81+wBgmk1++6Tx3RA+1zxPuT2iSwHp0M
/iyqB+f6Yq6lnyQBS4XlduqQLtyhzqhL25BgZ/gCc7e9LjTxZHRKhZIg/rhH
rpH7cfCw4tsmNUQCe96VMvZrAJez9yfKjJPg8F75rLUDABZ/jaXlSSTIfiym
dIwFQDvpmYbKLAnK2Pzk3r/Vgc2jnNY6rFMw6OOzsEY4ColOm9OtFafgOyNh
3sjvCNT4rKjHBkxBRt3vnSFtWvClbtePhEdTEG9zYkEtSwve79TSTwydgn9z
9xslHmpB5Fe/i2nRU7BfuXawZL8WXFxbuJ+fMQVeW4gLDbGHgB7CqGtqnoKe
mWG2Pdc1YVcc4QKrGBnu2Jm46B3SgEPBu3d4S5HBPs5AyEJAAyy9rDsn95Lh
x7bHb9Jn1SHGpN2oWo0MjetX4xffq8NW7nLdIAMyeN8b5b+8Wx3WH8cqMnmT
QXXt+gc2wQNA8NNlWm0kA0PpTwpVThU2Xb///UY7GU5miWgMcamChGXpvcFu
MvRUPV1bp6uArbryYtkYGZaYowd7ilWgZ3YX9e4fMlzkF+uoO6kCP11+dy5J
UoA730a9ekgZ8mxSs+bvUKCYLej4QMU+UO+VXmF7QIE7qqC8HLcPvpllnRUO
psCTYrEHNi77oOF03u9jzyhQYrrt+Sz/PpjULD8cmUYBAx/DPAMXBRAS6GuT
a6QA3xXfE+ZS8hDUzLtsK0IFmWOOqjuqZYHDIPaMpwQV6v9NPRRKkYWo6h2v
Q2SokBe8/OW8vywkl4np5uynwqd9Vn631WWhJHtfxLIeFVwarSOM38sALURf
IvYmFeR3j8vtfb0HrI4+NGj4TgWT2+rx4jlSMLRI4q2qokI8sxCbcqQUXM4z
7v1WT4WJ03nnXT2l4OZucaf8X1Sg9au4Ox+SgiDm78EJROx8/3zZ2w2SkFe7
8uMq9zTcEg+gPJmVAFZjXw1m22mwN2BIDn0Xh//YRlZXHKeBK2qruXqkOPCi
kzULTtNwvEvTqcdOHIRVBM+TPaahJMzc8Q+TOOznL/JoC5kGgv9jq1cGYmDd
8zvn9cdpEIxLe8tJFIFPdrektFex4+KhgyXndsHl4lmxVGYaRJnNxsjJ7AKB
rd672NhpUF4mPzC2IgS+X+/xdWyjgeazx5qyWUKgLRC27rKXBnumDh1c2iQE
VT/fDrwyo4HMC9GtRvU7oEu9L+ZvNg3K3Pslah8KwONwm0j7PBoEi8wZGtkK
wMGJkae1hTRo1e64wXtYAF5GEQOf/6ABRzdiPba0HWypc27yXTQ4fb1F2MBr
O5BSuA0vbtDA5lLaSJoXPyxz6rF8tZiBc9JFDlyJfMBP54mrsp4BqlF0/NpD
Ptj3a2BPs/0MeD7KyBVy4gO7F16nRl1mIGRG+UmDGh9US799uvnBDFSthU/x
JvNC5BFmPrPMGRC1fi+fspMHZNyQ6PSfGVD/8rC54SQX6JiG5y78m4Ej304s
/hPmggvqVjrrTHQQJomf9prlhP9W6PbbuOgwQ9neIpvMCbOh4umau+lAecw0
lf5nC5Sn3JcP0adD6HGif3wJB5j9OnxQ7CUdLFiL6vOc2IDzMFdl+Ws6tLM2
r98GNqjMGDC8lE6H/n3KlPtCbKBy565jUh4dWN5cW7Jt2gw8u0sidtXSwVr7
Dquu+mb4eVNtUnCODicUsnvV+VnhGId8NM9ZBmzasWZR+48Zlj2XhfNMGZBQ
H86lP8QM+YP174ysGBDsL0DeKGcG8XynbxGXGUC75hQn+JAZVi0ySJx3GTDP
w32+bjMzlKTvPsqeyYBejmJDmigTuHEz6jNzGDCpnBFXxMQEsn4/zE59YsBt
TtboSz83dOLO2Do/LmeAlte8nIv1ho7X78RYlk4GTDflENgereso2LiKp/cx
wHcXh2eS4brOeI3We90RBnQKWv33bMe6jsnLvh+PKAwYZCR2P8ld0+HYlH1a
koGdz6JbHXl3TQfd8OuqWGCA+JkjxbMn13R8u0/ZO6wwQOKyzNZc/jWd//9/
P5jiLpCvHl3V+T+xvHzY
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-1., 1.}, {0., 0.9999999998296738}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1., 1.}, {0., 0.9999999998296738}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.953106345969984*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"be9aaaca-2c7e-41a1-9255-e5bdce8782c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Deriving",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    TemplateBox[<|"boxes" -> FormBox[
        SubsuperscriptBox["\[Alpha]", 
         RowBox[{
           SubscriptBox["\[Nu]", "1"], ",", 
           SubscriptBox["\[Nu]", "2"]}], 
         StyleBox["M", "TI"]], TraditionalForm], "errors" -> {}, "input" -> 
      "\\alpha^M_{\\nu_1, \\nu_2}", "state" -> "Boxes"|>,
     "TeXAssistantTemplate"]}], TraditionalForm]],ExpressionUUID->
  "6c3d7591-d221-482f-9601-9a227f13cc1c"],
 " from integrating ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Gamma]", 
          StyleBox["M", "TI"]], "(", "\[Omega]", ")"}], TraditionalForm], 
     "errors" -> {}, "input" -> "\\gamma^M(\\omega)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c937e314-5cf2-45d6-8b2d-d3111299b513"]
}], "Subsection",
 CellChangeTimes->{{3.947320430363924*^9, 3.947320451535034*^9}, {
  3.947320482232377*^9, 3.94732050096776*^9}, {3.947320545753528*^9, 
  3.947320555417284*^9}, {3.947320616675068*^9, 3.947320618647779*^9}, {
  3.9473206505720787`*^9, 
  3.94732066246392*^9}},ExpressionUUID->"64abb48f-43c5-4ad3-b675-\
ed8667f2b567"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{
     RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "  ", "&&", " ", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", 
         SubscriptBox["\[Nu]", "1"], ",", " ", 
         SubscriptBox["\[Nu]", "2"]}], "}"}], ",", "Reals"}], "]"}]}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "\[Beta]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "+", " ", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{
           RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
       "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "+", " ", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{
            RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
        "]"}]}], ")"}], "/", "2"}]}], "]"}], 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Omega]", " ", "-", " ", 
        SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"4", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{
  3.947320697662015*^9, {3.947320966530932*^9, 3.947320980890608*^9}, {
   3.9473210267156*^9, 3.9473212393732643`*^9}, {3.947321285816518*^9, 
   3.947321291585203*^9}, {3.947321956243649*^9, 3.947322025213964*^9}, {
   3.947328581223297*^9, 3.947328583299472*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a9baf513-2d37-4678-a465-dd455a41b3b1"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "2"], "+", "\[Omega]", "+", 
       RowBox[{"Abs", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "2"], "+", "\[Omega]"}], 
        "]"}]}], ")"}]}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", 
        SubscriptBox["\[Nu]", "1"]}], ")"}], "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.94732121106175*^9, 3.9473212413049507`*^9, 
  3.947321294441403*^9, 3.947321860467552*^9, 3.947322032522235*^9, 
  3.947331635894351*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"bcc1e022-2171-4053-9559-45b7197a2b9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "->", " ", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9473212998663483`*^9, 3.947321339282714*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"317f7eb2-f430-4f8c-85dc-b61942bd5a3e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SubsuperscriptBox["\[Nu]", "1", "2"], 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Nu]", "1"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Nu]", "2"]}]}], ")"}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "-", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Nu]", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        SubscriptBox["\[Nu]", "2"]}], ")"}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Nu]", "1"], "-", 
          SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "-", 
        SubscriptBox["\[Nu]", "1"], "-", 
        SubscriptBox["\[Nu]", "2"]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox[
        SubsuperscriptBox["\[Nu]", "1", "2"], 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], "+", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Nu]", "1"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "-", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Nu]", "2"]}]}], ")"}]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], "+", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Nu]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "\[Beta]", " ", 
            SuperscriptBox["\[Sigma]", "2"]}], "+", 
           SubscriptBox["\[Nu]", "2"]}], ")"}]}], 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        SubscriptBox["\[Nu]", "1"], "+", 
        SubscriptBox["\[Nu]", "2"]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.94732136013694*^9, 3.947321869019348*^9, 
  3.947322039293796*^9, 3.947331643637586*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"49ba178d-09ac-4d17-beb9-ae0995b8a0a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyAlphaMetroFromGamma", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"%", ",", " ", 
    RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947321419745644*^9, 3.947321422367258*^9}, {
  3.9473218132970667`*^9, 3.947321838668912*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"d702e396-a92f-4ab3-9af8-0983a07a66ae"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Nu]", "1", "2"], "+", 
      RowBox[{
       SubscriptBox["\[Nu]", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Nu]", "2"]}]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["\[Nu]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], "+", 
         SubscriptBox["\[Nu]", "2"]}], ")"}]}]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Erfc", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "-", 
       SubscriptBox["\[Nu]", "1"], "-", 
       SubscriptBox["\[Nu]", "2"]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", "\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Nu]", "1"], "+", 
         SubscriptBox["\[Nu]", "2"]}], ")"}]}]], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}], "+", 
        SubscriptBox["\[Nu]", "1"], "+", 
        SubscriptBox["\[Nu]", "2"]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9473214233288527`*^9, 3.947321876213241*^9, 
  3.947322057751038*^9, 3.947331668437586*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b72114d0-278e-45a7-bae7-7d5fd0e15683"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PaperAlphaMetro", " ", "=", " ", 
  RowBox[{"0.5", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Nu]", "1"], " ", "-", " ", 
         SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"8", " ", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Erfc", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Sigma]"}], 
        RowBox[{"Sqrt", "[", "8", "]"}]], " ", "+", " ", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Nu]", "1"], "+", 
          SubscriptBox["\[Nu]", "2"]}], ")"}], 
        RowBox[{
         RowBox[{"Sqrt", "[", "8", "]"}], "\[Sigma]"}]]}], "]"}], " ", "+", 
     " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[Beta]"}], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Nu]", "1"], "+", 
           SubscriptBox["\[Nu]", "2"]}], ")"}]}], "2"], "]"}], 
      RowBox[{"Erfc", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Beta]", " ", "\[Sigma]"}], 
         RowBox[{"Sqrt", "[", "8", "]"}]], " ", "-", " ", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Nu]", "1"], "+", 
           SubscriptBox["\[Nu]", "2"]}], ")"}], 
         RowBox[{
          RowBox[{"Sqrt", "[", "8", "]"}], "\[Sigma]"}]]}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.9473214880486317`*^9, 3.9473216218190804`*^9}, {
  3.947321702593042*^9, 3.9473217997006407`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1df6763f-0491-4ea1-87aa-0237582acece"],

Cell[BoxData[
 RowBox[{"0.5`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "-", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"8", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[Beta]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Nu]", "1"], "+", 
         SubscriptBox["\[Nu]", "2"]}], ")"}]}]], " ", 
     RowBox[{"Erfc", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Sigma]"}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]], "-", 
       FractionBox[
        RowBox[{
         SubscriptBox["\[Nu]", "1"], "+", 
         SubscriptBox["\[Nu]", "2"]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"], " ", "\[Sigma]"}]]}], "]"}]}], "+", 
    RowBox[{"Erfc", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Beta]", " ", "\[Sigma]"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Nu]", "1"], "+", 
        SubscriptBox["\[Nu]", "2"]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", "\[Sigma]"}]]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.947322088771834*^9, 3.947331689393813*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"2947836d-a313-4a15-96cf-ea8db5cdbf63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"MyAlphaMetroFromGamma", " ", "==", " ", "PaperAlphaMetro"}], ",", 
   " ", 
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.947321851719679*^9, 3.947321854786373*^9}, {
  3.947322069129775*^9, 3.94732207659515*^9}, {3.947322291525064*^9, 
  3.947322291910132*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"dad58cbd-f11e-42b4-b0bb-0cabd4c5c759"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.947322029920739*^9, 3.9473222325360403`*^9, 
  3.947322391746587*^9, 3.947331693842063*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"96fda60f-83ab-43ef-9ab1-8f3b97f4346a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{
     RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "  ", "&&", " ", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", 
         SubscriptBox["\[Nu]", "1"], ",", " ", 
         SubscriptBox["\[Nu]", "2"]}], "}"}], ",", "Reals"}], "]"}]}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Omega]", " ", "-", " ", 
        SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"4", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.947581989621503*^9, 3.9475819899441547`*^9}, 
   3.947582190362043*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"23dddd36-d471-44a5-94c5-080bc523d454"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", 
         SubscriptBox["\[Nu]", "1"]}], ")"}], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], "-", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", 
        SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.947581990696813*^9, 3.947582191912966*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"6ed7125a-d0b5-4bac-a490-d897d075ecc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "->", " ", "$Assumptions"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"9ce186f0-b37d-42a3-ad70-d3b4847e52df"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Nu]", "1"], "-", 
       SubscriptBox["\[Nu]", "2"]}], ")"}], "2"], 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Sigma]", "2"]}]]}]]], "Output",
 CellChangeTimes->{3.947581998649338*^9, 3.947582195039176*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"554b8f3e-dc72-408a-824c-0ccf1b51892b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]", "1"], " ", "=", " ", "0.172"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Nu]", "2"], " ", "=", " ", 
   RowBox[{"-", "0.086"}]}], ";", " ", 
  RowBox[{"\[Beta]", " ", "=", " ", "10.0"}], ";", " ", 
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{"1", "/", "10.0"}]}]}]], "Input",
 CellChangeTimes->{{3.947583120075325*^9, 3.9475831535656424`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"a039f5cc-9009-4934-8269-935af8793d8f"],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{3.9475831608740683`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"d04e7afc-8723-4f32-9239-457c7c9de648"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{
     RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "  ", "&&", " ", 
     RowBox[{"Element", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", 
         SubscriptBox["\[Nu]", "1"], ",", " ", 
         SubscriptBox["\[Nu]", "2"]}], "}"}], ",", "Reals"}], "]"}]}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", "\[Beta]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "+", " ", 
         RowBox[{"\[Beta]", " ", 
          RowBox[{
           RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
       "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "+", " ", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{
            RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
        "]"}]}], ")"}], "/", "2"}]}], "]"}], 
  RowBox[{"Exp", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Omega]", " ", "-", " ", 
        SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"4", 
      RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"\[Sigma]", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{3.947583229285912*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"93fbab83-7001-402a-9832-611706342b29"],

Cell[BoxData[
 RowBox[{"3.989422804014327`", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "24.999999999999996`"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.172`"}], "+", "\[Omega]"}], ")"}], "2"]}], "-", 
    RowBox[{"24.999999999999996`", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.086`", "\[VeryThinSpace]", "+", "\[Omega]"}], ")"}], "2"]}],
     "-", 
    RowBox[{"5.`", " ", 
     RowBox[{"(", 
      RowBox[{
      "0.05000000000000001`", "\[VeryThinSpace]", "+", "\[Omega]", "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"0.05000000000000001`", "\[VeryThinSpace]", "+", "\[Omega]"}],
         "]"}]}], ")"}]}]}]]}]], "Output",
 CellChangeTimes->{3.947583173393826*^9, 3.94758323832831*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ed3695fc-e90d-419f-be9f-ba658f3d5b70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "->", " ", "$Assumptions"}]}], "]"}]], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"8da8e5d2-b26c-4d87-9b82-de1525314858"],

Cell[BoxData["0.2103061767619498`"], "Output",
 CellChangeTimes->{3.947583181068461*^9, 3.947583240948842*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"75c08cf7-7fe3-42dc-b615-7fd5382fe8dd"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.947583083569388*^9, 
  3.9475830920425177`*^9}},ExpressionUUID->"eb366305-291d-41a6-836f-\
3a7f833023f2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.94758198443429*^9, 
  3.947581987482897*^9}},ExpressionUUID->"78f7c979-bd24-49f0-bb41-\
d13e5bf9760d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]", "1"], " ", "=", " ", 
   RowBox[{"-", "0.45"}]}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Nu]", "2"], "=", 
   RowBox[{"-", "0.45"}]}], ";", " ", 
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{"1", "/", "\[Beta]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AlphaMBeforeInt", " ", "=", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "-", " ", 
          SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.947650273796925*^9, 3.947650309080503*^9}, {
  3.94765074924284*^9, 3.947650749411251*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"dd3eae07-f697-47d0-934d-b1096c056363"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"0.45`", "\[VeryThinSpace]", "+", "\[Omega]"}], ")"}], "2"]}]],
    " ", "\[Beta]"}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.9476504193711*^9, 3.947650525456025*^9, 
  3.947650753818315*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"8994f490-13d9-4041-841a-0c63ec56a67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AlphaMBeforeInt", "<", " ", "\[CurlyEpsilon]"}], ",", 
     RowBox[{"0", "<", "\[CurlyEpsilon]", "<", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], " ", ",", 
     RowBox[{"\[Omega]", " ", "<=", " ", 
      RowBox[{"-", "0.45"}]}], ",", " ", 
     RowBox[{"\[Beta]", " ", ">", " ", "0"}]}], "}"}], ",", " ", "\[Omega]", 
   ",", " ", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.947650425955496*^9, 3.9476504506163063`*^9}, {
  3.94765053149815*^9, 3.947650596233192*^9}, {3.947650662606207*^9, 
  3.947650673704414*^9}, {3.947650859390005*^9, 3.9476508663554573`*^9}, {
  3.947651054972342*^9, 3.947651076987308*^9}, {3.947651114571443*^9, 
  3.9476511199693117`*^9}, {3.94765116600811*^9, 3.9476512987222157`*^9}, {
  3.9476514716400023`*^9, 3.947651496887005*^9}, {3.947651552037425*^9, 
  3.947651567942024*^9}, {3.9476516511077642`*^9, 3.9476516910114803`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"12d3999d-13c6-4e6c-976f-568b88d3966b"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "ratnz", 
   "\"Reduce was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 20, 11, 29560657911434118119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.947651691720908*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"12d2d945-cdf2-40a2-ab24-bacf34c0c4d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", "<", "\[Beta]", "<", "2.506628274631`*^-10"}], "&&", 
        RowBox[{"0", "<", "\[CurlyEpsilon]", "\[LessEqual]", 
         RowBox[{"0.3989422804014327`", " ", "\[Beta]"}]}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "\[Equal]", "2.5066282746310006`*^-10"}], "&&", 
        RowBox[{"0", "<", "\[CurlyEpsilon]", "<", "1.`*^-10"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", ">", "2.506628274631`*^-10"}], "&&", 
        RowBox[{"0", "<", "\[CurlyEpsilon]", "<", "1.`*^-10"}]}], ")"}]}], 
     ")"}], "&&", 
    RowBox[{"\[Omega]", "<", 
     RowBox[{
      RowBox[{"-", "0.45`"}], "-", 
      RowBox[{"1.4142135623730951`", " ", 
       SqrtBox[
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1.`", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"2.5066282746310002`", " ", "\[CurlyEpsilon]"}], 
             "\[Beta]"], "]"}]}], 
          SuperscriptBox["\[Beta]", "2"]]}]]}]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0", "<", "\[Beta]", "<", "2.506628274631`*^-10"}], "&&", 
    RowBox[{
     RowBox[{"0.3989422804014327`", " ", "\[Beta]"}], "<", "\[CurlyEpsilon]", 
     "<", "1.`*^-10"}], "&&", 
    RowBox[{"\[Omega]", "\[LessEqual]", 
     RowBox[{"-", "0.45`"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.947651300730606*^9, 3.947651502389772*^9, {3.947651661940793*^9, 
   3.947651691727723*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"d46efde4-b522-40b7-8dfd-d84559a03603"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Nu]", "1"], " ", "=", " ", "0.45"}], ";", " ", 
  RowBox[{
   SubscriptBox["\[Nu]", "2"], "=", "0.45"}], ";", " ", 
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{"1", "/", "\[Beta]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AlphaMBeforeInt", " ", "=", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", 
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", " ", "+", " ", 
        RowBox[{"\[Beta]", " ", 
         RowBox[{
          RowBox[{"\[Sigma]", "^", "2"}], " ", "/", " ", "2"}]}]}], ")"}], 
      ")"}]}], "]"}], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         SubscriptBox["\[Nu]", "1"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"4", 
       RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "-", " ", 
          SubscriptBox["\[Nu]", "2"]}], ")"}], "^", "2"}]}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"\[Sigma]", "^", "2"}]}], ")"}]}], "]"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.947652080879505*^9, 3.947652082282159*^9}, 
   3.9476521993257523`*^9, {3.947652254249362*^9, 3.947652264255845*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ff778989-f507-41b4-93b7-7519903c764b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[Beta]", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.45`"}], "+", "\[Omega]"}], ")"}], "2"]}], "-", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", "\[Beta]"}]], "+", "\[Omega]"}], ")"}]}]}]], " ", 
   "\[Beta]"}], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.947652084616384*^9, 3.947652201253253*^9, 
  3.947652294356947*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"88eae7ab-79cc-4a12-8f22-06cc18e2321f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AlphaMBeforeInt", "<", " ", "\[CurlyEpsilon]"}], ",", 
     RowBox[{"0", "<", "\[CurlyEpsilon]", "<", " ", 
      RowBox[{"10", "^", 
       RowBox[{"-", "10"}]}]}], " ", ",", 
     RowBox[{"\[Omega]", " ", ">=", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Beta]", " ", ">", " ", "0"}]}], "}"}], ",", " ", "\[Omega]", 
   ",", " ", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.9476521003498383`*^9, 3.947652102381246*^9}, 
   3.9476521379201527`*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"033f9f6a-2f30-4baa-bdeb-ac1025edd65a"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "inex", 
   "\"Reduce was unable to solve the system with inexact coefficients or the \
system obtained by direct rationalization of inexact numbers present in the \
system. Since many of the methods used by Reduce require exact input, \
providing Reduce with an exact version of the system may help.\"", 2, 37, 16, 
   29560657911434118119, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.947652104776978*^9, 3.9476521383130903`*^9, 
  3.9476522040124693`*^9, 3.947652304696228*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"19c4c1c8-3b35-4dd6-81b5-c477c41927e9"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.45`"}], "+", "\[Omega]"}], ")"}], "2"]}], "-", 
          RowBox[{"\[Beta]", " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"2", " ", "\[Beta]"}]], "+", "\[Omega]"}], ")"}]}]}]], 
        " ", "\[Beta]"}], 
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]]], "<", "\[CurlyEpsilon]"}], ",", 
     RowBox[{"0", "<", "\[CurlyEpsilon]", "<", 
      FractionBox["1", "10000000000"]}], ",", 
     RowBox[{"\[Omega]", "\[GreaterEqual]", "0.45`"}], ",", 
     RowBox[{"\[Beta]", ">", "0"}]}], "}"}], ",", "\[Omega]", ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Output",
 CellChangeTimes->{3.947652104780961*^9, 3.947652138315773*^9, 
  3.947652204017033*^9, 3.947652304701528*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"3547c14e-c236-4f79-bd79-33a919ef5e81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Exprr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["\[Beta]", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "9"}], "20"], " ", "+", " ", "\[Omega]"}], ")"}], 
      "2"]}], " ", "+", " ", 
    RowBox[{"\[Beta]", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", "\[Beta]"}]], "+", "\[Omega]"}], ")"}]}], " ", "+", " ", 
    
    RowBox[{"Log", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "Pi"}], "]"}], "\[Beta]"], "\[Epsilon]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Exprr", " ", "<=", " ", "0"}], ",", 
     RowBox[{
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "\[Epsilon]"}], "}"}], 
        ",", "Reals"}], "]"}], " ", "&&", " ", 
      RowBox[{"\[Beta]", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"0", "<", " ", "\[Epsilon]", " ", "<", " ", "1"}]}]}], "}"}], 
   ",", " ", "\[Omega]", ",", " ", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.947652516174527*^9, 3.947652522469759*^9}, {
  3.947654200380288*^9, 3.947654351264248*^9}, {3.94765443029891*^9, 
  3.947654459135001*^9}, {3.947654490763576*^9, 3.947654518119322*^9}, {
  3.9476546393564157`*^9, 3.947654685945484*^9}, {3.947654724518547*^9, 
  3.947654765042597*^9}, {3.947654815313096*^9, 3.9476548171882563`*^9}, {
  3.947654861157805*^9, 3.947654963696718*^9}, {3.9476610171714993`*^9, 
  3.947661026455668*^9}, {3.9476610678640337`*^9, 3.9476610868456907`*^9}, {
  3.947661159638509*^9, 3.947661202833642*^9}, {3.9476612460828648`*^9, 
  3.947661273183703*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"618f3edc-7371-4747-818a-12358bdbd794"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "nsmet", 
   "\"This system cannot be solved with the methods available to Reduce.\"", 
   2, 14, 7, 29560729463708848084, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.947654459772306*^9, {3.9476544921382732`*^9, 3.9476545202623177`*^9}, {
   3.947654665671791*^9, 3.947654688434731*^9}, 3.947654725322673*^9, {
   3.947654755968938*^9, 3.947654765389999*^9}, {3.947654812373783*^9, 
   3.947654817822775*^9}, {3.94765486635356*^9, 3.947654918471655*^9}, {
   3.947654951600074*^9, 3.947654964239152*^9}, {3.947661019985297*^9, 
   3.947661026795719*^9}, {3.947661070831807*^9, 3.947661131365415*^9}, {
   3.947661169152087*^9, 3.947661204417811*^9}, {3.947661247697049*^9, 
   3.947661273703232*^9}},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"6677a187-d913-4b7f-a4cd-a05d32ca18e9"],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["9", "20"]}], "+", "\[Omega]"}], ")"}], "2"]}], "+", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", "\[Beta]"}]], "+", "\[Omega]"}], ")"}]}], "+", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Epsilon]"}], "\[Beta]"], 
        "]"}]}], "\[LessEqual]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Beta]", "|", "\[Omega]", "|", "\[Epsilon]"}], ")"}], 
       "\[Element]", 
       TemplateBox[{},
        "Reals"]}], "&&", 
      RowBox[{"\[Beta]", ">", "0"}], "&&", 
      RowBox[{"0", "<", "\[Epsilon]", "<", "1"}]}]}], "}"}], ",", "\[Omega]", 
   ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Output",
 CellChangeTimes->{
  3.947661131382637*^9, {3.9476611691564617`*^9, 3.947661204420506*^9}, {
   3.9476612477006607`*^9, 3.947661273705905*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"84646f0e-dd54-40ef-9dd4-d0693e0a2f71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["b1, b2", "Subsection",
 CellChangeTimes->{{3.94784111081514*^9, 
  3.947841121227499*^9}},ExpressionUUID->"97581c49-458b-497f-8de6-\
2da074dd72fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "  ", "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", 
        SubscriptBox["\[Nu]", "1"], ",", " ", 
        SubscriptBox["\[Nu]", "2"], ",", " ", "\[Nu]", ",", " ", "x", ",", 
        " ", "t"}], "}"}], ",", "Reals"}], "]"}], " ", "&&", " ", 
    RowBox[{"x", " ", ">=", " ", 
     RowBox[{"\[Beta]", " ", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "/", "2"}]}]}]}]}], ";", " ", 
  RowBox[{
   RowBox[{"Exp", "[", 
    FractionBox[
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[Nu]", " ", "+", " ", 
         RowBox[{"2", "x"}]}], ")"}], "2"]}], 
     RowBox[{"16", 
      RowBox[{"x", "/", "\[Beta]"}]}]], "]"}], 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}], " ", "/", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", " ", "Pi"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.947841250536647*^9, 3.947841462807446*^9}, 
   3.947842102732634*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"7b891656-ae52-48f3-b3eb-1b3628f7fdff"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]"}], "-", 
    FractionBox[
     RowBox[{"\[Beta]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "x"}], "+", "\[Nu]"}], ")"}], "2"]}], 
     RowBox[{"16", " ", "x"}]]}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{{3.947841440475684*^9, 3.9478414639776287`*^9}, 
   3.947841511308352*^9, 3.947842105577429*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"9045359b-e820-49d9-a6d4-cdd45725898f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], " ", ",", " ", 
   
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.94784145005054*^9, 3.947841507730459*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"39d5e022-f732-475c-bdc6-a3597bc53f10"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SqrtBox["2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "t", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "+", 
      FractionBox[
       RowBox[{"2", " ", "t"}], "\[Beta]"]}], ")"}]}]], " ", 
  SqrtBox[
   FractionBox["x", "\[Beta]"]]}]], "Output",
 CellChangeTimes->{3.9478415141097517`*^9, 3.947842109504923*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"1b38823f-20f5-4840-8f14-810505159240"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Sinh", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", 
     RowBox[{"\[Nu]", " ", "/", " ", "4"}]}], "]"}], 
   RowBox[{"2", " ", "I"}]], 
  RowBox[{"Exp", "[", 
   FractionBox[
    RowBox[{"-", 
     SuperscriptBox["\[Nu]", "2"]}], 
    RowBox[{"8", 
     RowBox[{"\[Sigma]", "^", "2"}]}]], "]"}], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}], " ", "/", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "Pi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.94784280417564*^9, 3.947842874966913*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"d72e286f-6abb-41c7-95f1-fdee5b722e1d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]"}], "-", 
     FractionBox[
      SuperscriptBox["\[Nu]", "2"], 
      RowBox[{"8", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", 
   RowBox[{"Sinh", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Nu]"}], "4"], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{3.947842881738893*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"2519223c-6aaa-4742-8a83-c687edf1ffa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], " ", ",", " ", 
   
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}]], "Input",\

 CellLabel->"In[18]:=",ExpressionUUID->"140f4d10-5408-4ffd-aaa7-f711c6f563f9"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "t"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", "\[Beta]", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], " ", 
  "\[Sigma]"}]], "Output",
 CellChangeTimes->{3.947842909232996*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4155072e-2951-473e-a632-9c2d513cea0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", "Pi", " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{
      RowBox[{"-", "\[Beta]"}], " ", 
      RowBox[{"\[Nu]", " ", "/", " ", "4"}]}], "]"}]}]], 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}], " ", "/", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", " ", "Pi"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.947843709766354*^9, 3.9478437291363564`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e404f919-4800-4e8e-a625-9f2b429657fc"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]"}]], " ", 
   RowBox[{"Sech", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Nu]"}], "4"], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.947843737534547*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3e7fd783-6023-4273-ade9-b7aad6a458a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{"%", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], " ", ",", " ", 
   
   RowBox[{"Assumptions", " ", "->", " ", "$Assumptions"}]}], "]"}]], "Input",\

 CellLabel->"In[20]:=",ExpressionUUID->"1f71fa71-5edd-4304-b04d-fe4ee77bf515"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    FractionBox["2", "\[Pi]"]], " ", 
   RowBox[{"Sech", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "t"}], "\[Beta]"], "]"}]}], 
  "\[Beta]"]], "Output",
 CellChangeTimes->{3.947843759440474*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2daf770c-f007-47cf-aef8-4d332bc6c0bc"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.947841981036456*^9, 3.947842070433675*^9}, 
   3.947842792309602*^9},ExpressionUUID->"7fd4bd03-2076-46c5-ada6-\
a2f0d1619908"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", "10.0"}], ";", " ", 
  RowBox[{"\[Sigma]", " ", "=", " ", 
   RowBox[{"1", "/", "\[Beta]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FPlusMetro", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "+", " ", "\[Nu]"}], 
        RowBox[{"Sqrt", "[", "8", "]"}]], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         RowBox[{"\[Nu]", " ", "/", " ", "2"}]}], "]"}], 
       RowBox[{"Erfc", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", " ", 
           RowBox[{"\[Sigma]", "^", "2"}]}], " ", "-", " ", "\[Nu]"}], 
         RowBox[{"Sqrt", "[", "8", "]"}]], "]"}]}]}], ")"}]}], " ", "-", " ", 
   
   FractionBox[
    RowBox[{"1", "-", " ", 
     RowBox[{"\[Nu]", "/", 
      RowBox[{"Abs", "[", "\[Nu]", "]"}]}]}], "4"]}]}]}], "Input",
 CellChangeTimes->{{3.947908386015662*^9, 3.947908492202327*^9}, {
  3.9479085237523813`*^9, 3.947908589849813*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"357a5623-b918-4cfb-8373-91f98517064b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["\[Nu]", 
      RowBox[{"Abs", "[", "\[Nu]", "]"}]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "5.`"}], " ", "\[Nu]"}]], " ", 
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{"0.10000000000000002`", "\[VeryThinSpace]", "-", "\[Nu]"}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]], "]"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{"0.10000000000000002`", "\[VeryThinSpace]", "+", "\[Nu]"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.947908489457649*^9, 3.94790849529298*^9}, 
   3.947908594816657*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"4ee01962-20fb-4f7f-a769-5ab69d19fe98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"FPlusMetro", ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", 
     RowBox[{"-", "19.19042206135785`"}], ",", "19.16542206135785`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"18c5889b-4e83-4026-b777-a981a52553e4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
jEimVMIxWZNb2vOL/v8AQCEB2Q==
          "]], LineBox[CompressedData["
1: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
3v8ACz4L/g==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], {}}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
jEimVMIxWZNb2vOL/v8AQCEB2Q==
             "]], 
            Line[CompressedData["
1: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
3v8ACz4L/g==
             "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-19.19042206135785, 
           19.16542206135785}, {-2.7755284744361278`*^-17, 
           5.123969838573779*^17}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-19.19042206135785, 
          19.16542206135785}, {-2.7755284744361278`*^-17, 
          5.123969838573779*^17}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
jEimVMIxWZNb2vOL/v8AQCEB2Q==
          "]], 
         Line[CompressedData["
1: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
3v8ACz4L/g==
          "]]}, "Charting`Private`Tag#1"], {}}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-19.19042206135785, 
        19.16542206135785}, {-2.7755284744361278`*^-17, 
        5.123969838573779*^17}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-19.19042206135785, 
   19.16542206135785}, {-2.7755284744361278`*^-17, 5.123969838573779*^17}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.94790859683885*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ef358ec8-f15c-47f1-9273-92c4d2e8b074"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"FPlusMetro", ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", 
     RowBox[{"-", "26.380844122715704`"}], ",", "26.330844122715703`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[5]:=",ExpressionUUID->"0832b6ae-df8d-493e-90f0-d6af6aa1453e"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVkGs01GkcgEebRGq2ywldKComlZyled//dpFfbm2bOUlEbGVVyKZik1Nt
kZTSolbIakzIDs3MpnI79BsNjVk0LsOoQS6rKZKmIk452354zvP5eZbuP7Ij
eAqLxXL7yv9uzmEPn9nHIPF3koxF3IQHXici/AMYHKgUJV2wy4J0/W4ddzeD
dY4xoTW6LAgMEY2N8BiU1eotr0jIhldrf9QLcmKQ6+/huX6MD/W99+M2rWew
9N0V24rQHBBdXzRtEWGwIaDaitWTA5GfBo1UdgxOV/jNMm0TAAsT57lZMBhc
Ghhr158LfUd1aVYLGeQPOG5IOpIHtVZ+ZiwTBt3dbafbTebBlQSOedksBi/o
+z6JXX4HTDzl1raTFJPt6gx3Zf8FE6y1QoMJimxlbUKlixA0926s6v9IsTz0
+bpPI0IQzD9o/+cbipcjt5s6eBXBmi7979mdFCvjjTpG3MUwOzm8clBNsfrS
3ENJ0yXwYbNqk7yVYmxQs1TziwTK83K3nKun2DXY2+Dt/De4hMP29xUU4+em
8rX6xWBjUah8WkLxzeNx1bTTxWDUNMerqJhie+PxkbLRYlA69PoEF1JcnB1u
wtbdhz2fz+5rz6RIztlPVRqWwCaRtq84jeLwNx8Xvk0rAcu9vAPJqRTVu/ya
DaxLQfvYIswjkeJY+h8p/rwyOH65KrLiJMUVmt/aZtRVQOKCzwm3fCnuKxUG
XBYjXJnUH7LcSdE7y9onzkwKV3vZvHxPiia3y3Jl8VJIFVqZ3nX92n8zynxb
cDVkMD8UlDtQPL84cN61zTLINPc23riW4q+aZSHjVTLImvJThNSWolO8UvZl
Yw3wFceI3JLiWQszg5lutVDglylXfUvx9KPwKXHRchBuzF2125jiRX7knPnG
dVBkKUrWGHz9YfSoSyCoA8lrqW/fJME9QQtiO9QKKIl5pR0ZIth3p8ufHdYA
tZnE0LiOYNXcBz1P0ptAfsY5/HcZwW1RT0xdvzSBYv+2pjlIUJRKN+QHNUPj
yr0ZZiUEN0u6p1qvawFVeQLHOo+gVcHsiJe6VmjLTkkS8gky/4SI7Q+qQB17
893qLIKn2tXm1ztVoNkqLnO4RjDK4TapVLZB/7M2D+dzBDNvaZmgJjUMVL24
W3OK4CVfxV17nw7QCl7P9ogmaFPwnsPr7oDB0MkOzyMED/f0Hc8YfQa6ieWh
AQEETV18Vls5d4LewqjEaEpQ8Wq9Ww6nB1JTtxq7OxI8eiC96EVMDywzWnLV
xJ5g2LO2+V4NPeA+rkh5aEMw207qrInqheT2JRkfTAj6hV3Y0ajqgyXX6+9E
jHJxpUvcuxstA3BvhoDjpONiWshQ5w76ErbEnShkD3MxP310zWH+Szh0zFIs
+peLrqMfF8mOaUHCi3441MrFtyXfHdhu8xqcZi6rOVTMxRUccfVz9RtoPj/u
SsRcnKgwnpblPQw/f26UGxRykYeOft0tw3Bx8GR9voCLGqmh3ljrW1DWPW3p
T+Fi4M4os6cfRiDFtb3gXgQXYx4fPSvhvIf/AK9mQH8=
          "]], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJwVkGs01GkcgEebRGq2ywldKComlZyled//dpFfbm2bOUlEbGVVyKZik1Nt
kZTSolbIakzIDs3MpnI79BsNjVk0LsOoQS6rKZKmIk452354zvP5eZbuP7Ij
eAqLxXL7yv9uzmEPn9nHIPF3koxF3IQHXici/AMYHKgUJV2wy4J0/W4ddzeD
dY4xoTW6LAgMEY2N8BiU1eotr0jIhldrf9QLcmKQ6+/huX6MD/W99+M2rWew
9N0V24rQHBBdXzRtEWGwIaDaitWTA5GfBo1UdgxOV/jNMm0TAAsT57lZMBhc
Ghhr158LfUd1aVYLGeQPOG5IOpIHtVZ+ZiwTBt3dbafbTebBlQSOedksBi/o
+z6JXX4HTDzl1raTFJPt6gx3Zf8FE6y1QoMJimxlbUKlixA0926s6v9IsTz0
+bpPI0IQzD9o/+cbipcjt5s6eBXBmi7979mdFCvjjTpG3MUwOzm8clBNsfrS
3ENJ0yXwYbNqk7yVYmxQs1TziwTK83K3nKun2DXY2+Dt/De4hMP29xUU4+em
8rX6xWBjUah8WkLxzeNx1bTTxWDUNMerqJhie+PxkbLRYlA69PoEF1JcnB1u
wtbdhz2fz+5rz6RIztlPVRqWwCaRtq84jeLwNx8Xvk0rAcu9vAPJqRTVu/ya
DaxLQfvYIswjkeJY+h8p/rwyOH65KrLiJMUVmt/aZtRVQOKCzwm3fCnuKxUG
XBYjXJnUH7LcSdE7y9onzkwKV3vZvHxPiia3y3Jl8VJIFVqZ3nX92n8zynxb
cDVkMD8UlDtQPL84cN61zTLINPc23riW4q+aZSHjVTLImvJThNSWolO8UvZl
Yw3wFceI3JLiWQszg5lutVDglylXfUvx9KPwKXHRchBuzF2125jiRX7knPnG
dVBkKUrWGHz9YfSoSyCoA8lrqW/fJME9QQtiO9QKKIl5pR0ZIth3p8ufHdYA
tZnE0LiOYNXcBz1P0ptAfsY5/HcZwW1RT0xdvzSBYv+2pjlIUJRKN+QHNUPj
yr0ZZiUEN0u6p1qvawFVeQLHOo+gVcHsiJe6VmjLTkkS8gky/4SI7Q+qQB17
893qLIKn2tXm1ztVoNkqLnO4RjDK4TapVLZB/7M2D+dzBDNvaZmgJjUMVL24
W3OK4CVfxV17nw7QCl7P9ogmaFPwnsPr7oDB0MkOzyMED/f0Hc8YfQa6ieWh
AQEETV18Vls5d4LewqjEaEpQ8Wq9Ww6nB1JTtxq7OxI8eiC96EVMDywzWnLV
xJ5g2LO2+V4NPeA+rkh5aEMw207qrInqheT2JRkfTAj6hV3Y0ajqgyXX6+9E
jHJxpUvcuxstA3BvhoDjpONiWshQ5w76ErbEnShkD3MxP310zWH+Szh0zFIs
+peLrqMfF8mOaUHCi3441MrFtyXfHdhu8xqcZi6rOVTMxRUccfVz9RtoPj/u
SsRcnKgwnpblPQw/f26UGxRykYeOft0tw3Bx8GR9voCLGqmh3ljrW1DWPW3p
T+Fi4M4os6cfRiDFtb3gXgQXYx4fPSvhvIf/AK9mQH8=
             "]], 
            Line[CompressedData["
1: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

             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-26.380844122715704`, 26.330844122715703`}, {0., 
           2.20932612236273*^19}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{-26.380844122715704`, 26.330844122715703`}, {0., 
          2.20932612236273*^19}}, "Frame" -> {{False, False}, {False, False}},
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVkGs01GkcgEebRGq2ywldKComlZyled//dpFfbm2bOUlEbGVVyKZik1Nt
kZTSolbIakzIDs3MpnI79BsNjVk0LsOoQS6rKZKmIk452354zvP5eZbuP7Ij
eAqLxXL7yv9uzmEPn9nHIPF3koxF3IQHXici/AMYHKgUJV2wy4J0/W4ddzeD
dY4xoTW6LAgMEY2N8BiU1eotr0jIhldrf9QLcmKQ6+/huX6MD/W99+M2rWew
9N0V24rQHBBdXzRtEWGwIaDaitWTA5GfBo1UdgxOV/jNMm0TAAsT57lZMBhc
Ghhr158LfUd1aVYLGeQPOG5IOpIHtVZ+ZiwTBt3dbafbTebBlQSOedksBi/o
+z6JXX4HTDzl1raTFJPt6gx3Zf8FE6y1QoMJimxlbUKlixA0926s6v9IsTz0
+bpPI0IQzD9o/+cbipcjt5s6eBXBmi7979mdFCvjjTpG3MUwOzm8clBNsfrS
3ENJ0yXwYbNqk7yVYmxQs1TziwTK83K3nKun2DXY2+Dt/De4hMP29xUU4+em
8rX6xWBjUah8WkLxzeNx1bTTxWDUNMerqJhie+PxkbLRYlA69PoEF1JcnB1u
wtbdhz2fz+5rz6RIztlPVRqWwCaRtq84jeLwNx8Xvk0rAcu9vAPJqRTVu/ya
DaxLQfvYIswjkeJY+h8p/rwyOH65KrLiJMUVmt/aZtRVQOKCzwm3fCnuKxUG
XBYjXJnUH7LcSdE7y9onzkwKV3vZvHxPiia3y3Jl8VJIFVqZ3nX92n8zynxb
cDVkMD8UlDtQPL84cN61zTLINPc23riW4q+aZSHjVTLImvJThNSWolO8UvZl
Yw3wFceI3JLiWQszg5lutVDglylXfUvx9KPwKXHRchBuzF2125jiRX7knPnG
dVBkKUrWGHz9YfSoSyCoA8lrqW/fJME9QQtiO9QKKIl5pR0ZIth3p8ufHdYA
tZnE0LiOYNXcBz1P0ptAfsY5/HcZwW1RT0xdvzSBYv+2pjlIUJRKN+QHNUPj
yr0ZZiUEN0u6p1qvawFVeQLHOo+gVcHsiJe6VmjLTkkS8gky/4SI7Q+qQB17
893qLIKn2tXm1ztVoNkqLnO4RjDK4TapVLZB/7M2D+dzBDNvaZmgJjUMVL24
W3OK4CVfxV17nw7QCl7P9ogmaFPwnsPr7oDB0MkOzyMED/f0Hc8YfQa6ieWh
AQEETV18Vls5d4LewqjEaEpQ8Wq9Ww6nB1JTtxq7OxI8eiC96EVMDywzWnLV
xJ5g2LO2+V4NPeA+rkh5aEMw207qrInqheT2JRkfTAj6hV3Y0ajqgyXX6+9E
jHJxpUvcuxstA3BvhoDjpONiWshQ5w76ErbEnShkD3MxP310zWH+Szh0zFIs
+peLrqMfF8mOaUHCi3441MrFtyXfHdhu8xqcZi6rOVTMxRUccfVz9RtoPj/u
SsRcnKgwnpblPQw/f26UGxRykYeOft0tw3Bx8GR9voCLGqmh3ljrW1DWPW3p
T+Fi4M4os6cfRiDFtb3gXgQXYx4fPSvhvIf/AK9mQH8=
          "]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{-26.380844122715704`, 26.330844122715703`}, {0., 
        2.20932612236273*^19}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
       "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-26.380844122715704`, 26.330844122715703`}, {0., 
   2.20932612236273*^19}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.947908499177334*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"353cd152-57b5-4798-a08c-0448fcbcc60d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Eta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", "\[Sigma]", " ", "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "\[Sigma]", ",", " ", "\[Nu]", ",", " ", "t", ",", " ", "\[Beta]"}], 
       "}"}], ",", "Reals"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"B2Metro", " ", "=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", 
     RowBox[{"Sqrt", "[", "2", "]"}], "Pi"}]], 
   FractionBox[
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"t", "^", "2"}]}], " ", "-", 
        RowBox[{"I", " ", "t"}]}], ")"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{
        RowBox[{"Abs", "[", "t", "]"}], "<=", "\[Eta]"}], "]"}], "I", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "t"}], "+", "I"}], ")"}]}]}], 
    RowBox[{"t", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "t"}], " ", "+", " ", "I"}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.947933068355928*^9, 3.947933155896247*^9}, {
  3.947933471110078*^9, 3.947933479315357*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"6df905c0-bb3f-4de4-871b-0d88f0b656fd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", "2"]}]}]], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "+", 
      RowBox[{"2", " ", "t"}]}], ")"}], " ", 
    RowBox[{"Boole", "[", 
     RowBox[{
      RowBox[{"Abs", "[", "t", "]"}], "\[LessEqual]", "\[Eta]"}], "]"}]}]}], 
  RowBox[{"4", " ", 
   SqrtBox["2"], " ", "\[Pi]", " ", "t", " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     RowBox[{"2", " ", "t"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9479331576673737`*^9, 3.947933775890873*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5097b930-66c6-479e-b2f7-f2091db0a936"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]", " ", "=", " ", "0.1"}], ";", " ", 
   RowBox[{"\[Eta]", " ", "=", " ", "0.02"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"B2Metro", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "\[Nu]", " ", "t"}], "]"}], " ", "/", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9479331708016367`*^9, 3.9479332136131897`*^9}, {
   3.9479332556545467`*^9, 3.947933271017061*^9}, {3.9479333108539*^9, 
   3.947933323218029*^9}, {3.9479335552601223`*^9, 3.947933557430825*^9}, {
   3.947933676429983*^9, 3.947933685325205*^9}, {3.947933756427457*^9, 
   3.947933799979781*^9}, 
   3.947934020289261*^9},ExpressionUUID->"3bedf4ac-1a27-403a-938a-\
d514df785cd6"],

Cell[BoxData[
 RowBox[{"0.014419979784564597`", "\[VeryThinSpace]", "+", 
  RowBox[{"8.559125630469566`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.9479332429299793`*^9, 3.947933271843857*^9}, {
  3.9479333163779488`*^9, 3.947933324093981*^9}, {3.947933782963085*^9, 
  3.947933802706394*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"39ed309e-a6f5-48f0-a25f-67a7ba25f2ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Eta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", "\[Sigma]", " ", "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "\[Sigma]", ",", " ", "\[Nu]", ",", " ", "t", ",", " ", "\[Beta]"}], 
       "}"}], ",", "Reals"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FPlusNu", "[", "\[Nu]_", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         RowBox[{"\[Sigma]", "^", "2"}]}], " ", "+", " ", "\[Nu]"}], 
       RowBox[{"Sqrt", "[", "8", "]"}]], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Beta]"}], " ", 
        RowBox[{"\[Nu]", " ", "/", " ", "2"}]}], "]"}], " ", 
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "-", " ", "\[Nu]"}], 
        RowBox[{"Sqrt", "[", "8", "]"}]], "]"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.947933396429405*^9, 3.9479334527842093`*^9}, {
  3.9479334875436687`*^9, 3.947933518602277*^9}, {3.947933828193449*^9, 
  3.947933834792576*^9}},ExpressionUUID->"fa68cdf4-60d9-4110-8c00-\
a70caeb3a4fe"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "\[Nu]"}], "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "]"}]}], "+", 
    RowBox[{"Erfc", "[", 
     FractionBox[
      RowBox[{"\[Nu]", "+", 
       RowBox[{"\[Beta]", " ", 
        SuperscriptBox["\[Sigma]", "2"]}]}], 
      RowBox[{"2", " ", 
       SqrtBox["2"]}]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.947933509618355*^9, 3.94793352005651*^9}, 
   3.947933591722411*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"35264c60-4d23-40f6-af8a-d2bad172547d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"FPlusNu", " ", "*", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}], " ", "/", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], " ", ",", " ", 
   
   RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947933523573986*^9, 3.947933588433215*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2e140afc-0462-4979-a4b7-a42c21c3d52e"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.947933772142362*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"e3078892-e2d9-4068-a4c0-1c7d5cb87162"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Factor 2", "Subsection",
 CellChangeTimes->{{3.948266333629485*^9, 
  3.948266334605256*^9}},ExpressionUUID->"0d6692b1-8b34-4025-8f50-\
2a703ae8e53c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "s", ",", " ", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", "\[Nu]", 
        ",", " ", "t", ",", " ", "\[Beta]"}], "}"}], ",", "Reals"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ft", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Sigma]", "2"]}], " ", 
      SuperscriptBox["t", "2"]}], "]"}], " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "/", " ", "Pi"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fw", " ", "=", " ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Omega]", "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], "]"}], " ", "/", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", " ", "\[Sigma]", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.948266340552758*^9, 3.948266551298081*^9}, {
  3.948266674935759*^9, 3.948266675340086*^9}, {3.948362636791359*^9, 
  3.948362636982781*^9}},ExpressionUUID->"b1592b04-52c6-464f-a544-\
6b17677505b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ftFourier", " ", "=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"ft", " ", "*", "  ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "\[Omega]", " ", "t"}], "]"}], " ", "/", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", " ", "Pi"}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
    RowBox[{"Assumptions", "->", "$Assumptions"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.948266555013632*^9, 3.948266620300049*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"18059f85-8d2b-4e64-82f3-5177b72069f7"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["\[Omega]", "2"], 
     RowBox[{"4", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]"}], ")"}], 
    RowBox[{"1", "/", "4"}]], " ", 
   SqrtBox["\[Sigma]"]}]]], "Output",
 CellChangeTimes->{
  3.948266626871521*^9, {3.948266661544495*^9, 3.948266680141302*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"ed5bb41a-df30-4c7d-b053-637d6beae2d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Fw", " ", "==", " ", "ftFourier"}], ",", " ", 
   RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.948266711522153*^9, 3.948266745049272*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"d7cb1998-5ef4-4f20-a281-c1fd4f9d77fe"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.94826674645689*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"1d14dd9d-fe1a-4512-a763-7ef9a88cda32"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"s", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "s", ",", " ", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", "\[Nu]", 
        ",", " ", "t", ",", " ", "\[Beta]"}], "}"}], ",", "Reals"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.948362655306581*^9, 3.948362659294909*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"78877273-4d58-4025-9a9d-0af0138e9258"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"-", 
     RowBox[{"Exp", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["t", "2"], 
         SuperscriptBox["s", "2"]}], 
        SuperscriptBox["\[Beta]", "2"]], " ", "-", " ", 
       FractionBox[
        RowBox[{"2", " ", "I", " ", "t", " ", 
         SuperscriptBox["s", "2"]}], "\[Beta]"]}], "]"}]}], 
    RowBox[{"t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"t", "/", "\[Beta]"}]}], " ", "+", " ", "I"}], ")"}], " ", 
      "/", " ", "beta"}]}]], ",", " ", 
   RowBox[{"s", "->", "Infinity"}], ",", " ", 
   RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.948362505477521*^9, 3.948362630979855*^9}, {
  3.948362694218588*^9, 3.948362711951988*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"90817378-4cbd-4e7f-a171-d2dec45ca947"],

Cell[BoxData[
 TemplateBox[{
  "Limit", "alimv", 
   "\"Warning: Assumptions that involve the limit variable are ignored.\"", 2,
    3, 2, 29565325835835474637, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.948362663008515*^9, 3.9483627140930357`*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"ebc42ce5-1c0b-4023-a5f5-55c2117663f6"],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"beta", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["s", "2"], " ", 
           SuperscriptBox["t", "2"]}], 
          SuperscriptBox["\[Beta]", "2"]]}], "-", 
        FractionBox[
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["s", "2"], " ", "t"}], "\[Beta]"]}]]}], 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", 
        FractionBox[
         RowBox[{"2", " ", "t"}], "\[Beta]"]}], ")"}]}]]}], ",", 
   RowBox[{"s", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"\[Beta]", ">", "0"}], "&&", 
     RowBox[{"\[Sigma]", ">", "0"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "s", "|", "\[Omega]", "|", "\[Sigma]", "|", "\[Nu]", "|", "t", "|", 
        "\[Beta]"}], ")"}], "\[Element]", 
      TemplateBox[{},
       "Reals"]}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.948362663285128*^9, 3.948362714294923*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fc847ebf-769d-4225-a47d-944df5da9b3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FNuZero", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "+", " ", "\[Nu]"}], 
        RowBox[{"Sqrt", "[", "8", "]"}]], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         RowBox[{"\[Nu]", " ", "/", " ", "2"}]}], "]"}], " ", 
       RowBox[{"Erfc", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", " ", 
           RowBox[{"\[Sigma]", "^", "2"}]}], " ", "-", " ", "\[Nu]"}], 
         RowBox[{"Sqrt", "[", "8", "]"}]], "]"}]}]}], ")"}]}], " ", "-", " ", 
   
   FractionBox[
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"Sign", "[", "\[Nu]", "]"}]}], "4"]}]}]], "Input",
 CellChangeTimes->{{3.9483638476250067`*^9, 3.948363877361116*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"735790f8-0b00-4064-814a-d4fc12eb8b89"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[Nu]"}], "+", 
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]], "]"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{"\[Nu]", "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Sign", "[", "\[Nu]", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.948363889004805*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6972de00-93a5-48be-b046-2fc15027edca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["FNuZero", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]], 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", " ", 
   RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9483638820554733`*^9, 3.948363894118947*^9}, {
  3.9483639543243933`*^9, 3.9483639695976267`*^9}, {3.948364002706214*^9, 
  3.94836401163351*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9a562af9-3994-441d-9746-259fc23b773d"],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Nu]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
           RowBox[{"Erfc", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "\[Nu]"}], "+", 
              RowBox[{"\[Beta]", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], 
             RowBox[{"2", " ", 
              SqrtBox["2"]}]], "]"}]}], "+", 
          RowBox[{"Erfc", "[", 
           FractionBox[
            RowBox[{"\[Nu]", "+", 
             RowBox[{"\[Beta]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], 
            RowBox[{"2", " ", 
             SqrtBox["2"]}]], "]"}]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"Sign", "[", "\[Nu]", "]"}]}], ")"}]}]}], ")"}]}], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"s", ">", "0"}], "&&", 
     RowBox[{"\[Beta]", ">", "0"}], "&&", 
     RowBox[{"\[Sigma]", ">", "0"}], "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "s", "|", "\[Omega]", "|", "\[Sigma]", "|", "\[Nu]", "|", "t", "|", 
        "\[Beta]"}], ")"}], "\[Element]", 
      TemplateBox[{},
       "Reals"]}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.948364439454562*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"eedff211-5cbb-4409-977a-3ec952cd990f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.949638462209964*^9, 
  3.9496384677598057`*^9}},ExpressionUUID->"4877901b-3097-4add-9ec7-\
b71b3e212c7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"s", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "s", ",", " ", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", "\[Nu]", 
        ",", " ", "t", ",", " ", "\[Beta]"}], "}"}], ",", "Reals"}], 
     "]"}]}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"ff94cb14-49f7-4332-88ee-b638cefa065f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["2", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "Pi"}], "]"}]], 
    RowBox[{"Exp", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "4"}], 
        SuperscriptBox["t", "2"], "x"}], "\[Beta]"], "-", 
      RowBox[{"2", "I", " ", "t", " ", "x"}]}], "]"}]}], ",", " ", "x", ",", 
   " ", 
   RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94963848080942*^9, 3.949638500508762*^9}, {
  3.949638537054282*^9, 3.949638655745023*^9}, {3.949638704090089*^9, 
  3.949638704609539*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"57c20f1a-9afc-4562-b46f-a2660f05a90d"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", "t", " ", "x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "t"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]}], ")"}]}], "\[Beta]"]}]],
     " ", "\[Beta]"}], 
   RowBox[{
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]], " ", "t", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "t"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Beta]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.94963867125632*^9, 3.9496387054502487`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2051539c-fb3b-42a3-8ff3-df0055e03481"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tPlus", " ", "=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"t", "^", "2"}]}], " ", "-", " ", 
      RowBox[{"I", " ", "t"}]}], "]"}], " ", "+", " ", 
    RowBox[{"I", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "t"}], " ", "+", " ", "I"}], ")"}]}]}], 
   RowBox[{"t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "t"}], " ", "+", " ", "I"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.950778223440032*^9, 3.950778288162586*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ac99afe5-f510-4243-8476-2f4f4170a092"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "t"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["t", "2"]}]}]], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", "+", 
      RowBox[{"2", " ", "t"}]}], ")"}]}]}], 
  RowBox[{"t", " ", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", "+", 
     RowBox[{"2", " ", "t"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9507782886199617`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"06c7d729-41eb-49ee-bf9c-9c5bb625ccd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"tPlus", ",", " ", 
   RowBox[{"t", "->", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.950778305223831*^9, 3.950778320617852*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e3f43b8e-e2b2-4eba-8c1d-941e7de44613"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.950778326866186*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"19c9a554-838e-4dad-8c2c-c154b0ff036a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", " ", "=", " ", 
   RowBox[{
    RowBox[{"s", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "&&", " ", 
    RowBox[{"Element", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "s", ",", " ", "\[Omega]", ",", " ", "\[Sigma]", ",", " ", "\[Nu]", 
        ",", " ", "t", ",", " ", "\[Beta]"}], "}"}], ",", "Reals"}], 
     "]"}]}]}], ";"}]], "Input",ExpressionUUID->"450d4c11-6b58-466f-a061-\
cc37543dbef1"],

Cell[BoxData[
 RowBox[{"Fnu0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Beta]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "+", " ", "\[Nu]"}], 
        RowBox[{"Sqrt", "[", "8", "]"}]], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[Beta]"}], " ", 
         RowBox[{"\[Nu]", " ", "/", " ", "2"}]}], "]"}], " ", 
       RowBox[{"Erfc", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"\[Beta]", " ", 
           RowBox[{"\[Sigma]", "^", "2"}]}], " ", "-", " ", "\[Nu]"}], 
         RowBox[{"Sqrt", "[", "8", "]"}]], "]"}]}]}], ")"}]}], " ", "-", " ", 
   
   FractionBox[
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"Sign", "[", "\[Nu]", "]"}]}], "2"]}]}]], "Input",
 CellChangeTimes->{{3.950952359235629*^9, 3.950952363591167*^9}, {
  3.950952406689043*^9, 3.950952410075615*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"662986ef-22af-48fb-bf6c-141803570e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[Nu]"}], "+", 
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]], "]"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{"\[Nu]", "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Sign", "[", "\[Nu]", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.9509524629026327`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"6947c9b1-e787-4027-8762-972fd2b61ae4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Beta]", " ", "\[Nu]"}], "2"]}]], " ", 
      RowBox[{"Erfc", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "\[Nu]"}], "+", 
         RowBox[{"\[Beta]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]}], 
        RowBox[{"2", " ", 
         SqrtBox["2"]}]], "]"}]}], "+", 
     RowBox[{"Erfc", "[", 
      FractionBox[
       RowBox[{"\[Nu]", "+", 
        RowBox[{"\[Beta]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"Sign", "[", "\[Nu]", "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.950952462948412*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c313c180-ab9f-43f4-8711-e5c878ac1fb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["Fnu0", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", " ", "Pi"}], "]"}]], 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "\[Nu]", " ", "t"}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", " ", 
     RowBox[{"-", "100.0"}], ",", " ", 
     RowBox[{"-", "0.001"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.950952455184164*^9, {3.950953360048777*^9, 3.950953371726499*^9}, {
   3.950953405278059*^9, 3.950953428537918*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1b295ac5-4257-4f7e-8f2c-a30e1347d58b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*FractionBox[RowBox[{SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"\[ImaginaryI]\\\", \\\" \\\", \\\"t\\\", \
\\\" \\\", \\\"\[Nu]\\\"}]], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", RowBox[{\\\"(\\\
\", RowBox[{RowBox[{SuperscriptBox[\\\"\[ExponentialE]\\\", \
RowBox[{\\\"-\\\", FractionBox[RowBox[{\\\"\[Beta]\\\", \\\" \\\", \
\\\"\[Nu]\\\"}], \\\"2\\\"]}]], \\\" \\\", RowBox[{\\\"Erfc\\\", \\\"[\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", RowBox[{\\\"Power\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Plus\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\
\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"Erfc\\\", \\\"[\\\", FractionBox[RowBox[{\
\\\"\[Nu]\\\", \\\"+\\\", RowBox[{\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \
RowBox[{\\\"2\\\", \\\" \\\", SqrtBox[\\\"2\\\"]}]], \\\"]\\\"}]}], \
\\\")\\\"}]}], \\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
RowBox[{\\\"Sign\\\", \\\"[\\\", \\\"\[Nu]\\\", \\\"]\\\"}]}], \
\\\")\\\"}]}]}], \\\")\\\"}]}], SqrtBox[RowBox[{\\\"2\\\", \\\" \\\", \\\"\
\[Pi]\\\"}]]]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"100.`\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"0.001`\\\"}]}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 9, 
   6, 29582298744978006941, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.950953362868088*^9, 3.950953372581766*^9}, {
  3.950953413057723*^9, 3.9509534288356457`*^9}},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"392d2908-637e-4dbd-8a83-1889a5d55bae"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Fnu0", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"\[ImaginaryI]", " ", "\[Nu]", " ", "t"}], "]"}]}], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Nu]", ",", 
     RowBox[{"-", "100.`"}], ",", 
     RowBox[{"-", "0.001`"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.950953351302792*^9, 3.950953372588138*^9}, {
  3.950953413064516*^9, 3.950953428841502*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"35c1cb43-9432-4637-9987-af4fd815a1ac"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1210, 740},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6287548e-6a67-42c2-b738-f24070de9297"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 576, 15, 71, "Subsection",ExpressionUUID->"ffd269ff-320b-4475-8127-b91f0172939c"],
Cell[CellGroupData[{
Cell[1181, 41, 2559, 72, 92, "Input",ExpressionUUID->"9751bb07-ae3a-43b9-a241-8b6d7ffb84d2"],
Cell[3743, 115, 1035, 30, 93, "Output",ExpressionUUID->"5df55154-12d7-42e3-8b72-2752837f7885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4815, 150, 346, 7, 37, "Input",ExpressionUUID->"f7fccb9e-1334-4c91-860e-f4410103bdd0"],
Cell[5164, 159, 1637, 47, 159, "Output",ExpressionUUID->"cbe5e026-17a1-4f32-b3ff-3e7a7131ac33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6838, 211, 1942, 60, 141, "Input",ExpressionUUID->"bedaddf1-3208-44d0-8d3e-7a07ebbc6c8f"],
Cell[8783, 273, 1263, 39, 94, "Output",ExpressionUUID->"fe7ef331-8125-4986-b657-d76e18a659ab"],
Cell[10049, 314, 577, 17, 68, "Output",ExpressionUUID->"bca3ee35-72d6-49b1-b781-48da5555504d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10663, 336, 346, 7, 37, "Input",ExpressionUUID->"7b5abb8b-0fc6-4f3e-9f4f-ed8c86735afd"],
Cell[11012, 345, 154, 2, 42, "Output",ExpressionUUID->"b4349038-5250-4574-b6f3-2a825ce23ee8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11215, 353, 1277, 31, 73, "Subsection",ExpressionUUID->"30cf68cb-d430-49da-b2f1-bde69ea4e98e"],
Cell[12495, 386, 1711, 39, 64, "Input",ExpressionUUID->"9768911a-9069-4e7c-97e9-3faf9f16435d"],
Cell[CellGroupData[{
Cell[14231, 429, 1016, 23, 37, "Input",ExpressionUUID->"a4bee400-c66b-41ea-9693-8d04ca375f89"],
Cell[15250, 454, 2275, 69, 72, "Output",ExpressionUUID->"408afeb5-193c-425c-9c56-3a20391be7d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17562, 528, 320, 7, 37, "Input",ExpressionUUID->"bbebda8f-5520-4d0f-a55e-e6f040ba3e1a"],
Cell[17885, 537, 381, 9, 35, "Message",ExpressionUUID->"6e33a0c5-1998-457a-9092-2af4f94e2677"],
Cell[18269, 548, 885, 26, 68, "Output",ExpressionUUID->"8f3b9228-5a1a-45c0-a86b-cb550c5409e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19203, 580, 892, 23, 69, "Subsection",ExpressionUUID->"d81eac87-a758-42e7-90d0-ef20c4059b86"],
Cell[CellGroupData[{
Cell[20120, 607, 2017, 48, 90, "Input",ExpressionUUID->"ccb07e9b-e243-40e7-a2b6-0e210b1d8de2"],
Cell[22140, 657, 815, 24, 110, "Output",ExpressionUUID->"e1f7248c-85f4-4bad-962f-9f694e829b5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22992, 686, 1037, 23, 37, "Input",ExpressionUUID->"180f06f4-363d-481e-875d-06a36cb3b62f"],
Cell[24032, 711, 1992, 57, 116, "Output",ExpressionUUID->"c97e4853-af10-4f7f-85d1-9e298fa1e889"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26061, 773, 362, 8, 37, "Input",ExpressionUUID->"5306ca9e-260a-43c0-90ac-1631015d073b"],
Cell[26426, 783, 408, 10, 35, "Message",ExpressionUUID->"bd7b4c99-c2ed-469e-a5f4-ecec9058fe22"],
Cell[26837, 795, 749, 20, 49, "Output",ExpressionUUID->"30539870-c2c8-4776-a116-49fa61f933c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27623, 820, 1093, 30, 90, "Input",ExpressionUUID->"bfb3a9af-fc0e-4de0-b90c-cc581c2bfe3d"],
Cell[28719, 852, 278, 6, 42, "Output",ExpressionUUID->"01123bf7-ab69-48de-ae5e-adc4a2560716"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29034, 863, 702, 23, 37, "Input",ExpressionUUID->"dc5b7f95-3e73-4841-a220-f4bee5178848"],
Cell[29739, 888, 762, 24, 110, "Output",ExpressionUUID->"8e0aa659-47b7-4fc6-93f5-bd3908e4256e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30538, 917, 757, 20, 37, "Input",ExpressionUUID->"e1f6a91c-8069-4fd3-bfc9-13d8938d95ad"],
Cell[31298, 939, 2915, 71, 146, "Output",ExpressionUUID->"0604a8fc-bf37-4a05-9363-e819ceff9d68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34250, 1015, 362, 8, 37, "Input",ExpressionUUID->"98c4a2d2-bee4-481e-b893-979ecfa7b076"],
Cell[34615, 1025, 381, 9, 35, "Message",ExpressionUUID->"039a31ff-b2ef-464a-b82f-82a7352e8db1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35033, 1039, 1513, 44, 73, "Input",ExpressionUUID->"74bb7991-afda-4b86-85c4-c02dc6543f32"],
Cell[36549, 1085, 1533, 44, 75, "Output",ExpressionUUID->"9014875b-647d-4a6d-bd1a-9370ab022887"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38119, 1134, 471, 11, 37, "Input",ExpressionUUID->"8b115bde-edd3-4c6a-86d5-5610650b4141"],
Cell[38593, 1147, 1054, 31, 61, "Output",ExpressionUUID->"f1e911f6-0c56-4a24-93aa-bac20a8f2d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39684, 1183, 1147, 32, 57, "Input",ExpressionUUID->"1987f44c-d9ab-44ea-b8a2-e14602415a1b"],
Cell[40834, 1217, 32904, 583, 303, "Output",ExpressionUUID->"8898f991-5b26-4845-9ad8-e02c70b368e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73775, 1805, 1180, 33, 57, "Input",ExpressionUUID->"94d9132e-60e1-41d8-9923-566adfcc1e03"],
Cell[74958, 1840, 39046, 686, 303, "Output",ExpressionUUID->"9a7e4bc0-7a15-4bf9-9a6a-68970ff1bbad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114041, 2531, 1138, 34, 57, "Input",ExpressionUUID->"faa061fd-e20c-4bac-93fb-22046fbb6a3b"],
Cell[115182, 2567, 44282, 770, 332, "Output",ExpressionUUID->"be9aaaca-2c7e-41a1-9255-e5bdce8782c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[159513, 3343, 1231, 30, 73, "Subsection",ExpressionUUID->"64abb48f-43c5-4ad3-b675-ed8667f2b567"],
Cell[CellGroupData[{
Cell[160769, 3377, 2257, 64, 65, "Input",ExpressionUUID->"a9baf513-2d37-4678-a465-dd455a41b3b1"],
Cell[163029, 3443, 1281, 38, 93, "Output",ExpressionUUID->"bcc1e022-2171-4053-9559-45b7197a2b9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164347, 3486, 414, 8, 37, "Input",ExpressionUUID->"317f7eb2-f430-4f8c-85dc-b61942bd5a3e"],
Cell[164764, 3496, 3283, 99, 97, "Output",ExpressionUUID->"49ba178d-09ac-4d17-beb9-ae0995b8a0a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168084, 3600, 390, 7, 37, "Input",ExpressionUUID->"d702e396-a92f-4ab3-9af8-0983a07a66ae"],
Cell[168477, 3609, 1877, 55, 85, "Output",ExpressionUUID->"b72114d0-278e-45a7-bae7-7d5fd0e15683"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170391, 3669, 1783, 53, 60, "Input",ExpressionUUID->"1df6763f-0491-4ea1-87aa-0237582acece"],
Cell[172177, 3724, 1536, 48, 81, "Output",ExpressionUUID->"2947836d-a313-4a15-96cf-ea8db5cdbf63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173750, 3777, 466, 10, 37, "Input",ExpressionUUID->"dad58cbd-f11e-42b4-b0bb-0cabd4c5c759"],
Cell[174219, 3789, 223, 3, 42, "Output",ExpressionUUID->"96fda60f-83ab-43ef-9ab1-8f3b97f4346a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174479, 3797, 1464, 42, 65, "Input",ExpressionUUID->"23dddd36-d471-44a5-94c5-080bc523d454"],
Cell[175946, 3841, 762, 23, 93, "Output",ExpressionUUID->"6ed7125a-d0b5-4bac-a490-d897d075ecc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176745, 3869, 346, 7, 37, "Input",ExpressionUUID->"9ce186f0-b37d-42a3-ad70-d3b4847e52df"],
Cell[177094, 3878, 448, 12, 65, "Output",ExpressionUUID->"554b8f3e-dc72-408a-824c-0ccf1b51892b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177579, 3895, 487, 11, 37, "Input",ExpressionUUID->"a039f5cc-9009-4934-8269-935af8793d8f"],
Cell[178069, 3908, 154, 2, 42, "Output",ExpressionUUID->"d04e7afc-8723-4f32-9239-457c7c9de648"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178260, 3915, 2012, 60, 65, "Input",ExpressionUUID->"93fbab83-7001-402a-9832-611706342b29"],
Cell[180275, 3977, 887, 23, 47, "Output",ExpressionUUID->"ed3695fc-e90d-419f-be9f-ba658f3d5b70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181199, 4005, 346, 7, 37, "Input",ExpressionUUID->"8da8e5d2-b26c-4d87-9b82-de1525314858"],
Cell[181548, 4014, 189, 2, 42, "Output",ExpressionUUID->"75c08cf7-7fe3-42dc-b615-7fd5382fe8dd"]
}, Open  ]],
Cell[181752, 4019, 154, 3, 37, "Input",ExpressionUUID->"eb366305-291d-41a6-836f-3a7f833023f2"],
Cell[181909, 4024, 151, 3, 37, "Input",ExpressionUUID->"78f7c979-bd24-49f0-bb41-d13e5bf9760d"],
Cell[CellGroupData[{
Cell[182085, 4031, 1364, 39, 65, "Input",ExpressionUUID->"dd3eae07-f697-47d0-934d-b1096c056363"],
Cell[183452, 4072, 553, 16, 80, "Output",ExpressionUUID->"8994f490-13d9-4041-841a-0c63ec56a67c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184042, 4093, 1062, 20, 37, "Input",ExpressionUUID->"12d3999d-13c6-4e6c-976f-568b88d3966b"],
Cell[185107, 4115, 453, 10, 35, "Message",ExpressionUUID->"12d2d945-cdf2-40a2-ab24-bacf34c0c4d3"],
Cell[185563, 4127, 1677, 44, 183, "Output",ExpressionUUID->"d46efde4-b522-40b7-8dfd-d84559a03603"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187277, 4176, 1658, 47, 65, "Input",ExpressionUUID->"ff778989-f507-41b4-93b7-7519903c764b"],
Cell[188938, 4225, 749, 23, 81, "Output",ExpressionUUID->"88eae7ab-79cc-4a12-8f22-06cc18e2321f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189724, 4253, 626, 14, 37, "Input",ExpressionUUID->"033f9f6a-2f30-4baa-bdeb-ac1025edd65a"],
Cell[190353, 4269, 653, 13, 57, "Message",ExpressionUUID->"19c4c1c8-3b35-4dd6-81b5-c477c41927e9"],
Cell[191009, 4284, 1249, 34, 81, "Output",ExpressionUUID->"3547c14e-c236-4f79-bd79-33a919ef5e81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192295, 4323, 1913, 48, 91, "Input",ExpressionUUID->"618f3edc-7371-4747-818a-12358bdbd794"],
Cell[194211, 4373, 877, 17, 35, "Message",ExpressionUUID->"6677a187-d913-4b7f-a4cd-a05d32ca18e9"],
Cell[195091, 4392, 1364, 41, 68, "Output",ExpressionUUID->"84646f0e-dd54-40ef-9dd4-d0693e0a2f71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196504, 4439, 153, 3, 67, "Subsection",ExpressionUUID->"97581c49-458b-497f-8de6-2da074dd72fd"],
Cell[CellGroupData[{
Cell[196682, 4446, 1287, 34, 65, "Input",ExpressionUUID->"7b891656-ae52-48f3-b3eb-1b3628f7fdff"],
Cell[197972, 4482, 597, 16, 86, "Output",ExpressionUUID->"9045359b-e820-49d9-a6d4-cdd45725898f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198606, 4503, 424, 10, 37, "Input",ExpressionUUID->"39d5e022-f732-475c-bdc6-a3597bc53f10"],
Cell[199033, 4515, 491, 13, 71, "Output",ExpressionUUID->"1b38823f-20f5-4840-8f14-810505159240"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199561, 4533, 679, 20, 62, "Input",ExpressionUUID->"d72e286f-6abb-41c7-95f1-fdee5b722e1d"],
Cell[200243, 4555, 605, 17, 98, "Output",ExpressionUUID->"2519223c-6aaa-4742-8a83-c687edf1ffa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200885, 4577, 359, 9, 37, "Input",ExpressionUUID->"140f4d10-5408-4ffd-aaa7-f711c6f563f9"],
Cell[201247, 4588, 762, 21, 61, "Output",ExpressionUUID->"4155072e-2951-473e-a632-9c2d513cea0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202046, 4614, 531, 14, 60, "Input",ExpressionUUID->"e404f919-4800-4e8e-a625-9f2b429657fc"],
Cell[202580, 4630, 473, 13, 80, "Output",ExpressionUUID->"3e7fd783-6023-4273-ade9-b7aad6a458a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203090, 4648, 359, 9, 37, "Input",ExpressionUUID->"1f71fa71-5edd-4304-b04d-fe4ee77bf515"],
Cell[203452, 4659, 342, 10, 82, "Output",ExpressionUUID->"2daf770c-f007-47cf-aef8-4d332bc6c0bc"]
}, Open  ]],
Cell[203809, 4672, 175, 3, 37, "Input",ExpressionUUID->"7fd4bd03-2076-46c5-ada6-a2f0d1619908"],
Cell[CellGroupData[{
Cell[204009, 4679, 1294, 35, 90, "Input",ExpressionUUID->"357a5623-b918-4cfb-8373-91f98517064b"],
Cell[205306, 4716, 977, 29, 70, "Output",ExpressionUUID->"4ee01962-20fb-4f7f-a769-5ab69d19fe98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206320, 4750, 311, 8, 37, "Input",ExpressionUUID->"18c5889b-4e83-4026-b777-a981a52553e4"],
Cell[206634, 4760, 92003, 1558, 306, "Output",ExpressionUUID->"ef358ec8-f15c-47f1-9273-92c4d2e8b074"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298674, 6323, 313, 8, 37, "Input",ExpressionUUID->"0832b6ae-df8d-493e-90f0-d6af6aa1453e"],
Cell[298990, 6333, 90611, 1534, 306, "Output",ExpressionUUID->"353cd152-57b5-4798-a08c-0448fcbcc60d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389638, 7872, 1363, 39, 90, "Input",ExpressionUUID->"6df905c0-bb3f-4de4-871b-0d88f0b656fd"],
Cell[391004, 7913, 796, 22, 77, "Output",ExpressionUUID->"5097b930-66c6-479e-b2f7-f2091db0a936"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391837, 7940, 988, 25, 65, "Input",ExpressionUUID->"3bedf4ac-1a27-403a-938a-d514df785cd6"],
Cell[392828, 7967, 394, 6, 42, "Output",ExpressionUUID->"39ed309e-a6f5-48f0-a25f-67a7ba25f2ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393259, 7978, 1438, 38, 88, "Input",ExpressionUUID->"fa68cdf4-60d9-4110-8c00-a70caeb3a4fe"],
Cell[394700, 8018, 877, 27, 71, "Output",ExpressionUUID->"35264c60-4d23-40f6-af8a-d2bad172547d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395614, 8050, 623, 15, 37, "Input",ExpressionUUID->"2e140afc-0462-4979-a4b7-a42c21c3d52e"],
Cell[396240, 8067, 155, 2, 42, "Output",ExpressionUUID->"e3078892-e2d9-4068-a4c0-1c7d5cb87162"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[396444, 8075, 156, 3, 67, "Subsection",ExpressionUUID->"0d6692b1-8b34-4025-8f50-2a703ae8e53c"],
Cell[396603, 8080, 1550, 44, 122, "Input",ExpressionUUID->"b1592b04-52c6-464f-a544-6b17677505b4"],
Cell[CellGroupData[{
Cell[398178, 8128, 690, 16, 37, "Input",ExpressionUUID->"18059f85-8d2b-4e64-82f3-5177b72069f7"],
Cell[398871, 8146, 540, 16, 93, "Output",ExpressionUUID->"ed5bb41a-df30-4c7d-b053-637d6beae2d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399448, 8167, 327, 6, 37, "Input",ExpressionUUID->"d7cb1998-5ef4-4f20-a281-c1fd4f9d77fe"],
Cell[399778, 8175, 151, 2, 42, "Output",ExpressionUUID->"1d14dd9d-fe1a-4512-a763-7ef9a88cda32"]
}, Open  ]],
Cell[399944, 8180, 645, 15, 37, "Input",ExpressionUUID->"78877273-4d58-4025-9a9d-0af0138e9258"],
Cell[CellGroupData[{
Cell[400614, 8199, 970, 27, 80, "Input",ExpressionUUID->"90817378-4cbd-4e7f-a171-d2dec45ca947"],
Cell[401587, 8228, 381, 9, 35, "Message",ExpressionUUID->"ebc42ce5-1c0b-4023-a5f5-55c2117663f6"],
Cell[401971, 8239, 1280, 36, 103, "Output",ExpressionUUID->"fc847ebf-769d-4225-a47d-944df5da9b3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403288, 8280, 1049, 29, 61, "Input",ExpressionUUID->"735790f8-0b00-4064-814a-d4fc12eb8b89"],
Cell[404340, 8311, 1027, 33, 71, "Output",ExpressionUUID->"6972de00-93a5-48be-b046-2fc15027edca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405404, 8349, 688, 16, 60, "Input",ExpressionUUID->"9a562af9-3994-441d-9746-259fc23b773d"],
Cell[406095, 8367, 1950, 57, 90, "Output",ExpressionUUID->"eedff211-5cbb-4409-977a-3ec952cd990f"]
}, Open  ]],
Cell[408060, 8427, 154, 3, 37, "Input",ExpressionUUID->"4877901b-3097-4add-9ec7-b71b3e212c7c"],
Cell[408217, 8432, 579, 14, 37, "Input",ExpressionUUID->"ff94cb14-49f7-4332-88ee-b638cefa065f"],
Cell[CellGroupData[{
Cell[408821, 8450, 708, 19, 65, "Input",ExpressionUUID->"57c20f1a-9afc-4562-b46f-a2660f05a90d"],
Cell[409532, 8471, 724, 21, 83, "Output",ExpressionUUID->"2051539c-fb3b-42a3-8ff3-df0055e03481"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410293, 8497, 653, 19, 60, "Input",ExpressionUUID->"ac99afe5-f510-4243-8476-2f4f4170a092"],
Cell[410949, 8518, 607, 18, 73, "Output",ExpressionUUID->"06c7d729-41eb-49ee-bf9c-9c5bb625ccd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411593, 8541, 264, 5, 37, "Input",ExpressionUUID->"e3f43b8e-e2b2-4eba-8c1d-941e7de44613"],
Cell[411860, 8548, 148, 2, 42, "Output",ExpressionUUID->"19c9a554-838e-4dad-8c2c-c154b0ff036a"]
}, Open  ]],
Cell[412023, 8553, 558, 14, 37, "Input",ExpressionUUID->"450d4c11-6b58-466f-a061-cc37543dbef1"],
Cell[412584, 8569, 1092, 30, 61, "Input",ExpressionUUID->"662986ef-22af-48fb-bf6c-141803570e9d"],
Cell[CellGroupData[{
Cell[413701, 8603, 1028, 33, 70, "Input",ExpressionUUID->"6947c9b1-e787-4027-8762-972fd2b61ae4"],
Cell[414732, 8638, 1027, 33, 71, "Output",ExpressionUUID->"c313c180-ab9f-43f4-8711-e5c878ac1fb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415796, 8676, 612, 16, 60, "Input",ExpressionUUID->"1b295ac5-4257-4f7e-8f2c-a30e1347d58b"],
Cell[416411, 8694, 2054, 32, 112, "Message",ExpressionUUID->"392d2908-637e-4dbd-8a83-1889a5d55bae"],
Cell[418468, 8728, 574, 15, 67, "Output",ExpressionUUID->"35c1cb43-9432-4637-9987-af4fd815a1ac"]
}, Open  ]]
}, Open  ]]
}
]
*)

